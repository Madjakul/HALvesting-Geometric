<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">SYSTRAN New Generation: The XML Translation Workflow</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Jean</forename><surname>Senellart</surname></persName>
							<email>senellart@systran.fr</email>
						</author>
						<author>
							<persName><forename type="first">Christian</forename><surname>Boitet</surname></persName>
							<email>christian.boitet@imag.fr</email>
						</author>
						<author>
							<persName><forename type="first">Laurent</forename><surname>Romary</surname></persName>
							<email>laurent.romary@loria.fr</email>
						</author>
						<author>
							<affiliation key="aff0">
								<address>
									<addrLine>SYSTRAN S.A. 1, rue du Cimetière</addrLine>
									<postCode>95230</postCode>
									<settlement>Soisy-sous-Montmorency</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="institution" key="instit1">GETA</orgName>
								<orgName type="institution" key="instit2">CLIPS</orgName>
								<orgName type="institution" key="instit3">IMAG</orgName>
								<address>
									<addrLine>BP 53 385 rue</addrLine>
									<postCode>38041</postCode>
									<settlement>Bibliothèque, Grenoble cedex 9</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">LORIA</orgName>
								<address>
									<addrLine>Campus Scientifique, BP 239</addrLine>
									<postCode>54506</postCode>
									<settlement>Vandoeuvre-les-Nancy</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">SYSTRAN New Generation: The XML Translation Workflow</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">90BD18E689FE763A55045717E3251202</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-08-24T14:59+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>Customization of Machine Translation (MT) is a prerequisite for corporations to adopt the technology. It is therefore important but nonetheless challenging. Ongoing implementation proves that XML is an excellent exchange device between MT modules that efficiently enables interaction between the user and the processes to reach highly granulated structure-based customization. Accomplished through an innovative approach called the SYSTRAN Translation Stylesheet, this method is coherent with the current evolution of the "authoring process". As a natural progression, the next stage in the customization process is the integration of MT in a multilingual tool kit designed for the "authoring process".</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Easy and deep customization of Machine Translation for a customer's specific needs has always been a challenge for MT vendors. As the corporate environment becomes increasingly multilingual, the importance of this issue grows. The typical corporate MT customer produces technical support documentation in one language and may need to provide multilingual support for an increasing number of non-English speaking customers. Human translation is not an option for such needs: the number of documents is huge, the database is frequently updated, and not all documents need to be translated into each target language. Finally, the prohibitive costs and the inability to quickly turnaround voluminous amounts of context-specific monolingual content into parallel multilingual corpora make human translation unsuitable for this kind of application. Alternatively, machine translation provides ondemand translations at relatively low costs. But to improve the usability level, the translation system needs to be customized. Classically, a customization process has two main components: terminology customization and engine customization. The first component is developed and maintained by the user <ref type="bibr">(SYSTRAN Intuitive Coding, 2003)</ref>, while the second (engine customization) traditionally relies on SYSTRAN's expertise and is therefore more costly. Note that in a typical production-level customization process, MT is applied at the very end of the text production workflow. This means that MT applies on publication format and for this reason does not benefit from potential XML structure that is commonly used in today's leading Content Management systems. On the contrary, working on this publication format leads to complex "format filtering" issues.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>This article illustrates that the ongoing advancement of SYSTRAN New Generation (NG) engines for XML provides tools tailored for use concurrent with the progressive evolvement of content. This opens a new perspective for finegrained MT customization, as this development overrides the traditional problematic aspects of the "engine customization" and "format filtering".</p><p>We describe two major applications of XML in the SYSTRAN New Generation Systems.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>MT XML Workflow</head><p>In this section, we depict the meaning of an "XML Workflow" for complex translation engines, and further explain how this workflow improves translation quality by providing users (through the translation authoring tool or integration with a generic authoring tool) with a very simple way of interacting with internal low-level linguistic modules.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1">General MT Needs and Module Interaction</head><p>At a basic level, the MT process is perceived as a sequence of "independent" modules as represented in Figure <ref type="figure">1a</ref>, in which:</p><p>• The workflow input is formatted text (html, doc, ... file).</p><p>• The workflow output is a formatted file with equivalent structure representing the translation of the input text. • The process parameters are general translation options and resources (choice of user dictionary, linguistic switches, etc.). The linguistic core of a Machine Translation "analysis-transfer-generation" process is defined in Figure <ref type="figure">1b</ref>. This modular organization is a requirement for maintaining very large coverage of NLP systems <ref type="bibr">(NG system, 2001)</ref>. It also allows the user to easily combine some of the modules in order to build a new specific NLP application, or customize an existing engine with specific modules. In a large-scale MT system, such as the SYSTRAN systems, all interaction between these modules are handled through:</p><p>• Backtracking -if one selection made at a given stage leads to a dead-end, the process is reinitialized in the context of the first choice and a second section is then explored.</p><p>• Delayed selection -some decisions normally made at a given stage are delayed by introducing an explicit "undefined" state. Typically, the disambiguation stage requires such processing.</p><p>• "Fix" rules -certain rules look for an expected incorrect result from an earlier process stage and fix this result based on additional information present at the current stage. These interaction mechanisms do not represent real "communication channels" between the modules because they cannot be used to control the translation process. On the other hand, they are complex to monitor. Consequently, none of these solutions is satisfactory for reaching fine-grained customization. Undeniably, to reach this goal, the user should be able to drive the translation process (implicitly or explicitly), not only through additional resources, but also by direct interaction with the different choices made by the modules. We show how this is simplified using a generic XML workflow.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">XML -Communication Model Between Modules and with an External Layer</head><p>The fundamental idea of the XML Workflow is simple:</p><p>• The input document is converted into an XML format. This conversion preserves (hides) the original formatting in &lt;tag&gt; nodes, and normalizes font properties into &lt;ts&gt; nodes 1 . • All modules in the process maintain this XML structure and compose its evolution.</p><p>• This occurs with the following main restriction. In every module, each XML structure output is aligned with the XML structure input. This alignment is done at the paragraph level, sentence and token<ref type="foot" target="#foot_0">2</ref> levels. This is performed by several means: IDREF, "norm" attributes preserving the state before the current transformation (for example, in tokenization or entity recognition) and duplication of structures.</p><p>A $100 wrist-watch.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Input Text</head><p>&lt;html&gt;&lt;hr&gt;A &lt;b&gt;$100&lt;/b&gt; wrist-watch.&lt;/html&gt; first xml representation &lt;?xml version="1.0"?&gt; &lt;document original_format="html"&gt;&lt;tag&gt;&amp;&lt;lt;hr&amp;gt;&lt;/tag&gt;&lt;par id="1"&gt;A &lt;ts face="bold"&gt;$100&lt;/ts&gt; wrist-watch.&lt;/par&gt; &lt;/document&gt; tokenized text after entity recognition [...] &lt;par id="p1" xml:lang="en"&gt; &lt;token type="word" capit="first" id="t1"&gt;A&lt;/token&gt; &lt;ts face="bold"&gt;&lt;entity type="monval" id="t2"&gt;$100&lt;/entity&gt;&lt;/ts&gt; &lt;token type="word" norm="wrist-watch" id="t3"&gt;wristwatch&lt;/token&gt; &lt;token type="punct" id="t4"&gt;.&lt;/token&gt; &lt;/par&gt; [...] segmented, translated text [...] &lt;par id="1"&gt; &lt;tu_group id="s1"&gt; &lt;tu xml:lang="en"&gt; &lt;token type="word" id="t1" capit="first"&gt;A&lt;/token&gt; &lt;ts face="bold"&gt;&lt;entity type="monval" id="t2"&gt;$100&lt;/entity&gt;&lt;/ts&gt; &lt;token type="word" norm="wrist-watch" id="t3"&gt;wristwatch&lt;/token&gt; &lt;token type="punct" id="t4"&gt;.&lt;/token&gt; &lt;/tu&gt; &lt;transtu xml:lang="fr"&gt; &lt;token id="t1" synt="pos=det"&gt;Une&lt;/token&gt; &lt;token type="word" type="noun" id="t3"&gt;montre-bracelet&lt;/token&gt; &lt;token type="det" id="t2-0"&gt;de&lt;/token&gt; &lt;ts face="bold"&gt;&lt;entity type="monval" id="t2"&gt;$100&lt;/entity&gt;&lt;/ts&gt; &lt;token type="punct" id="t4"&gt;.&lt;/token&gt; &lt;/transtu&gt; &lt;/tu_group&gt; &lt;/par&gt; [...] &lt;html&gt;&lt;hr&gt;Une montre-bracelet de &lt;b&gt;$100&lt;/b&gt;.&lt;/html&gt; output text Une montre-bracelet de $100.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Table 1 -Some intermediary translation steps within the translation of a single html sentence.</head><p>1Preserving character property in the translation process is critical for preserving the identical font style in the text output and for allowing translation memory parsing (TM entries in SYSTRAN systems are full enriched sentences)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>As a result, the input text can be regenerated with additional tagging introduced in a given step of the process, at any time.</head><p>An illustration of this workflow is provided in the table above. Note that only some steps of the process are represented.</p><p>Technically, the introduction of this XML workflow is based on the SYSTRAN NG Engine Architecture <ref type="bibr">(NG, Senellart 2001)</ref>. For current "classical SYSTRAN engines", this new XML Workflow fully replaces the existing workflow modules which are not "purely linguistic", and complements the current structure for "purely linguistic" modules. The most important point is that the internal structure (Analysis Area) on which linguistic routines apply is preserved, but is synchronized with this XML structure during any point in the process.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 2 -XML tree and associated memory representation</head><p>The actual XML structure updates are performed by a "lazy algorithm" for efficiency reasons. The internal structure handled by the modules is not the XML structure itself, but an optimized memory structure. For example, a "token" node is internally represented by a "token" structure. If the frame for storing the token is still the XML tree, the up-todate "token" representation is the memory structured stored as a pointer in a private field of the corresponding "token" node. The token node is synchronized when a dump of the XML structure is required, or when an XML operation, such as an XPath evaluation, is performed.</p><p>The communication "model" is then applied using a "mark_choice", and/or "post_choice" markup in the structure, as detailed in the following application "User-Process interaction".</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">User-Process Interaction</head><p>Based on the previous workflow, defining the interaction between user and process is straightforward: Let us consider noun-verb disambiguation. Figure <ref type="figure">4</ref> displays the feedback and the interaction process: • The first process is run and stops after executing the disambiguation routine. • The source text is regenerated and tags are converted into user readable tags such as textual marks, or, as in figure <ref type="figure" target="#fig_3">3</ref>, into userfriendly html scroll-down control).</p><p>• The user reviews and modifies the system choices.</p><p>• When translation is eventually run, the user choices are integrated into the XML structure as &lt;post_choice&gt; tags. &lt;post_choice process_path="//ling/disambiguation[@type='nounverb'] "&gt;noun&lt;/post_choice&gt;</p><p>• The disambiguation routine replaces the system choices with user choices when provided.</p><p>In SYSTRAN's system, the process and markup type identification is performed using an XPath expression in the "process tree". Each module is identified as a "node" in the process tree. Using this classification allows us to define a "communication" scheme with any new modules, as well as the possibility express precise restrictions, such as the following: &lt;!--markup all noun-verb or noun-adj system choice in disambiguation process --&gt; &lt;select process_path="//ling/disambiguation[@type='nounverb' or @type='noun-adj']"/&gt; &lt;!--markup all linguistic choices with a low confidence --&gt; &lt;select process_path="//ling/*[@confidence &amp;lt; 0.2]"/&gt;</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">SYSTRAN Translation Stylesheet</head><p>In this part, we portray a second application for XML in SYSTRAN NG Engines. This approach is independent of the XML workflow described above, but demonstrates that the combination of both allows the system to reach an effective customization frame based on the deep interaction between the translation system and highly granulated structure-based customization.</p><p>In the XML workflow, the input structure is mapped into an internal XML generic structure. However, this mapping only allows for the handling of shallow document structure. A typical example is PDF translation. For most PDF documents, the information that the PDF filter can retrieve is limited to a sentence list. Numbering may be preserved but without minimal structure information that clarifies two list items as consecutive and belonging to the same enumeration. Bold face font mat be preserved but not the style category that generated it. Even worse, words with internal elision may not be correctly reconstituted; not because of the poor quality of the PDF import filter, but because that information is no longer present in the document, and can only be reconstituted, at best. This limitation example of PDF documents is not unique. To a lesser extent, we observe the same phenomenon in all classical document formats. For example, an html page generated from a newspaper database does not contain information pertaining to the database structure, only its presentation 3 . The newspaper website contains different articles presented together and probably stored internally with domain information. But in most cases, this information is no longer part of the html structure; and even when present, is only expressed as comments but not sufficiently structured for automatic processing. Finally, it is important to note that this situation is more than a question of format. Most word processors are designed to handle named styles (for example, paragraph or character styles), but this option is usually ignored, as manual direct formatting is preferred.</p><p>Undoubtedly, XML content management and structured documents represent the future of text authoring. Several pure XML publication formats, like DocBook and specialized technical XML formats like XBRL (Extensible Business Reporting Language), are now recognized asstandards. Even major word processors and other content editing tools today integrate XML as a reference content format (such as OpenOffice, Office11). 3 Even if HTML language was to some extent designed to represent meta-information through tags like &lt;quote&gt;,</p><p>Below we display that the concept of "translation filter" is totally overridden by the "Translation Stylesheet" (TS).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.1">Definition -Translation and Formatting Stylesheets</head><p>A stylesheet is a way of associating "style" to formatting marks. In other words, the stylesheet is "the file that describes how to display a given (XML) input file". XSL (Extensible Stylesheet Language) is a powerful language used to express stylesheets. As a complete language based on XML objects, XSL provides the opportunity of transforming a source XML document into a target XML document, which goes far beyond "formatting". By extending "formatting" stylesheets and comparing publishing in the content production workflow (figure <ref type="figure">5</ref>), we use this transformation mechanism to produce fine-grained customized multilingual content. The Translation Stylesheet is thus "the file that describes how to translate a given (XML) input file". The input is either a node-set or a string (depends on the calling context in the XSL process). The functions return a tree fragment that contains the translated node-set, and the translation process feedback, such as a list of NFWs (Not Found Words) or sentence dictionary, etc. The set of translation options is represented by an option tree, and controls the type of information returned by the function. The following example shows a typical output structure. . templates". Assume that we have an input XML containing formatted text "Para" nodes that we want to translate and "Note" nodes that we want to remain in the source language. The xsl template in code sample 4 shows how Para nodes are processed. The main process is based on the following scheme:</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2.2">SYSTRAN Translation Stylesheet</head><formula xml:id="formula_0">Based</formula><p>• Define the XML area to be translated (can be a tree fragment or a string, if translation of attribute values is needed) • Preprocess (via another template) the tree fragment: this module typically interprets "token level" tags and converts those tags into internal SYSTRAN tags with appropriate semantics. For example, in code sample 5, a template converts CommandName tags into systran:dnt (Do Not Translate) SYSTRAN tags, and associates a part of speech to this word. Therefore, the analysis of the complete sentence is done with the acknowledgement that a token should not be translated as it behaves like a noun. code sample 3 -Translation output. It is a tree fragment containing source, target, not found word list, and translation options. Among translation options, "mark-up" of user-dictionary is activated.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Conclusion and Perspectives</head><p>This article discusses the impact related to the introduction of XML in the New Generation SYSTRAN MT Architecture. This has and continues to open new views for Machine Translation use, as well as the ability to successfully and simply perform MT customization. The XML frame is fully functional; the next stages will focus on its industrialization through a new preprocessing interface, a new customization methodology, and the exploration of new linguistic opportunities. For example, since the XML workflow enables the dynamic definition of "translation options" as a part of the communication channel, a direct application of this new option could allow some modules to generate on-the-fly local dictionaries.</p><p>The current evolution of transforming the &lt;xsl:template match="Para"&gt; &lt;xsl:comment&gt;SYSTRAN translation&lt;/xsl:comment&gt; &lt;xsl:variable name="preprocess"&gt; &lt;xsl:apply-templates select="." mode="preprocess"/&gt; &lt;/xsl:variable&gt; &lt;xsl:variable name="translation" select="systran:translate(exslt:node-set($preprocess)/*,$OPT)" /&gt; &lt;xsl:apply-templates select="$translation/target/*" mode="postprocess"/&gt; code sample 4 -xsl template describes the translation of "Para" element. &lt;Para&gt; nodes are localized, preprocessed, translated with the current XML option $OPT, and then regenerated using a postprocess template.</p><p>authoring process to structured format initiates better content control and responds to the increasing need for defined exchange standards.</p><p>Since "exchange" now implies multilinguality, the natural next step is the introduction of multilingual consideration, as illustrated in Figure <ref type="figure">5</ref>. The ability to rate the machine translatability of a text should also be considered at the same level as the validation of text structure or spell-checking.</p><p>Beyond the technical issues regarding the interaction of multilingual tools and text production, as presented in this paper, this evolution renews the linguistic definition of translation tools.</p><p>3</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>•</head><label></label><figDesc>Figure 1b -Schematic "linguistics" workflow</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head></head><label></label><figDesc>Figure 1a -General SYSTRAN translation workflow</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>Figure 4 -"markup/interaction/post" process</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 -</head><label>3</label><figDesc>Figure 3 -Conversion of "mark_choice" system tags into html controls</figDesc><graphic coords="4,67.08,484.32,231.30,124.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>Figure 5a-Classical use of Machine Translation, downstream text production using Word Processor Translation</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head></head><label></label><figDesc>&lt;xsl:template match="CommandName"&gt; &lt;systran:dnt type="noun"&gt; &lt;xsl:copy-of select=".</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>systran:output&gt; code sample 1-Translation output</head><label></label><figDesc>-a tree fragment that contains source, target, not found word list, and translation options. Among translation options, "mark-up" of user-dictionary is activated.</figDesc><table><row><cell>&lt;systran:output&gt;</cell><cell></cell></row><row><cell cols="2">&lt;source xml:lang="en"&gt;The &lt;name&gt;Z12&lt;/name&gt; &lt;Strong&gt;driver&lt;/Strong&gt; is</cell></row><row><cell>loaded.&lt;/source&gt;</cell><cell></cell></row><row><cell cols="2">&lt;target xml:lang="fr"&gt;Le &lt;mark type="dict" name="global"&gt;</cell></row><row><cell cols="2">&lt;Strong&gt;driveur&lt;/Strong&gt;&lt;/mark&gt; &lt;name&gt;Z12&lt;/name&gt; est chargé.&lt;/target&gt;</cell></row><row><cell>&lt;options&gt;</cell><cell></cell></row><row><cell cols="2">&lt;dicts&gt;&lt;dictionary name="global"/&gt;&lt;/dicts&gt;</cell></row><row><cell cols="2">&lt;marks&gt;&lt;dict_mark type="xml"/&gt;&lt;/marks&gt;</cell></row><row><cell>&lt;misc&gt;&lt;extract_nfw/&gt;&lt;/misc&gt;</cell><cell></cell></row><row><cell cols="2">&lt;ling&gt;&lt;imperative type="technical"/&gt;&lt;/ling&gt;</cell></row><row><cell>&lt;/options&gt;</cell><cell></cell></row><row><cell>&lt;nfw_list&gt;Z12&lt;/nfw_list&gt;</cell><cell></cell></row><row><cell>SYSTRAN Translation Stylesheet is based on a single extension function &lt;/&lt;code&gt;, ...</cell><cell>"systran:translate". The whole translation process is driven by a xslt processor (xsltproc). Technically the systran:translate function has the following "xslt" APIs: node-set systran:translate(node-set text,node-set translation_option) node-set systran:translate(string text,node-set translation_option)</cell></row></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1"><head></head><label></label><figDesc>on the systran:translate function, the translation stylesheet describes which XML area to translate and with which options through "xsl</figDesc><table><row><cell>&lt;systran:output&gt;</cell></row><row><cell>&lt;source xml:lang="en"&gt;The &lt;name&gt;Z12&lt;/name&gt; &lt;Strong&gt;driver&lt;/Strong&gt; is</cell></row><row><cell>loaded.&lt;/source&gt;</cell></row><row><cell>&lt;target xml:lang="fr"&gt;Le &lt;mark type="dict" name="global"&gt;</cell></row><row><cell>&lt;Strong&gt;driveur&lt;/Strong&gt;&lt;/mark&gt; &lt;name&gt;Z12&lt;/name&gt; est chargé.&lt;/target&gt;</cell></row><row><cell>&lt;options&gt;</cell></row><row><cell>&lt;dicts&gt;&lt;dictionary name="global"/&gt;&lt;/dicts&gt;</cell></row><row><cell>&lt;marks&gt;&lt;dict_mark type="xml"/&gt;&lt;/marks&gt;</cell></row><row><cell>&lt;misc&gt;&lt;extract_nfw/&gt;&lt;/misc&gt;</cell></row><row><cell>&lt;ling&gt;&lt;imperative type="technical"/&gt;&lt;/ling&gt;</cell></row><row><cell>&lt;/options&gt;</cell></row><row><cell>&lt;nfw_list&gt;Z12&lt;/nfw_list&gt;</cell></row><row><cell>&lt;/systran:output&gt;</cell></row></table></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_0"><p>A "token" becomes a "word" when linguistics really starts.</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgments</head><p>Special thanks to Daniel Veillard, architect and main developer of libxml2 and libxslt ; these are efficient, complete, portable, and free XML libraries that provide a large number of existing standards related to markup languages (XML, XSL, XPath, XInclude, Relax NG, XML Schemas, etc.). See http://www.xmlsoft.org.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">New Generation SYSTRAN Translation System</title>
		<author>
			<persName><forename type="first">J</forename><surname>Senellart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Dienes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Váradi</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of MT Summit IIX</title>
		<meeting>MT Summit IIX</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">SYSTRAN Intuitive Coding Technology</title>
		<author>
			<persName><forename type="first">J</forename><surname>Senellart</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rebollo</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of MT Summit IX</title>
		<meeting>MT Summit IX</meeting>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Handling text and corpus in Ariane-G5, a complete environment for multilingual MT</title>
		<author>
			<persName><forename type="first">C</forename><surname>Boitet</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of ACIDCA</title>
		<meeting>ACIDCA</meeting>
		<imprint>
			<date type="published" when="2000">2000. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">The Open Lexicon Interchange format (OLIF) comes of Age</title>
		<author>
			<persName><forename type="first">C</forename><surname>Lieske</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Mccormick</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Thurmair</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of MT Summit IIX</title>
		<meeting>MT Summit IIX</meeting>
		<imprint>
			<date type="published" when="2001">2001</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">DocBook: The Definitive Guide</title>
		<author>
			<persName><forename type="first">N</forename><surname>Walsh</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Muellner</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1999">1999</date>
			<publisher>O&apos;Reilly Books</publisher>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
