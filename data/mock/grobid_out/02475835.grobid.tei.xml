<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Curated Archiving of Research Software Artifacts : lessons learned from the French open archive (HAL)</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Roberto</forename><forename type="middle">Di</forename><surname>Cosmo</surname></persName>
						</author>
						<author role="corresp">
							<persName><forename type="first">Morane</forename><surname>Gruenpeter</surname></persName>
							<email>morane@softwareheritage.org</email>
						</author>
						<author>
							<persName><forename type="first">Bruno</forename><forename type="middle">P</forename><surname>Marmol</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Alain</forename><surname>Monteil</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Laurent</forename><surname>Romary</surname></persName>
						</author>
						<author>
							<persName><forename type="first">Jozefina</forename><surname>Sadowska</surname></persName>
						</author>
						<author>
							<persName><surname>Curated</surname></persName>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">Inria, Software Heritage</orgName>
								<orgName type="institution">University of Paris</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff1">
								<orgName type="department">Morane Gruenpeter Software Heritage</orgName>
								<orgName type="institution">University of L&apos;Aquila</orgName>
								<address>
									<country key="IT">Italy</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff2">
								<orgName type="institution">Bruno Marmol CCSD</orgName>
								<address>
									<settlement>Inria</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff3">
								<orgName type="institution">IES Inria</orgName>
								<address>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff4">
								<orgName type="department">Laurent Romary Inria</orgName>
								<orgName type="institution">IES Inria</orgName>
								<address>
									<country>France Jozefina Sadowska, France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff5">
								<address>
									<settlement>Paris</settlement>
									<country key="FR">France</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff6">
								<orgName type="institution">University of Edinburgh on behalf of the Digital Curation Centre</orgName>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff7">
								<orgName type="department">Curated Archiving of Research Software</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">Curated Archiving of Research Software Artifacts : lessons learned from the French open archive (HAL)</title>
					</analytic>
					<monogr>
						<idno type="ISSN">1746-8256. URL: http://www.ijdc.net</idno>
					</monogr>
					<idno type="MD5">AE6BACB54F8A0D1DF13F03D37117AE68</idno>
					<idno type="DOI">10.2218/ijdc.v0i0.0</idno>
					<note type="submission">Submitted on 12 Feb 2020 Received 16 December 2019 Correspondence should be addressed to Morane Gruenpeter</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-08-24T15:02+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract xml:lang="fr">
<div xmlns="http://www.tei-c.org/ns/1.0"><p>HAL is a multi-disciplinary open access archive for the deposit and dissemination of scientific research documents, whether they are published or not. The documents may come from teaching and research institutions in France or abroad, or from public or private research centers. L'archive ouverte pluridisciplinaire HAL, est destinée au dépôt et à la diffusion de documents scientifiques de niveau recherche, publiés ou non, émanant des établissements d'enseignement et de recherche français ou étrangers, des laboratoires publics ou privés.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Introduction</head><p>Modern research relies on software, but it has only gained recognition recently. While strategies for articles and even data preservation are already the norm, software is still a unique artifact for which it is rare to find dedicated deposits and preservation mechanisms in institutional repositories <ref type="bibr" target="#b9">(Milliken, 2019)</ref>. We need to preserve source code alongside scientific articles and datasets to scaffold future work on top of these open science pillars. As declared on the Inria /UNESCO Paris call:</p><p>'Recognise software source code as a fundamental research document on a par with scholarly articles and research data;' (UNESCO-Inria, 2019) Today, software is still too often considered as just data, even though data is gathered through observations or experiments, whereas software is a product of human ingenuity, written by authors and contributors, and embodying the logic of the data transformation. As mentioned in <ref type="bibr" target="#b0">(Alliez et al., 2019)</ref>, it is challenging to determine who should get credit for the software and which authority has the capability of doing so. Software can be designed and developed by a large number of contributors with a rich development history and a complex web of dependencies. This is why software source code should be considered a research output category of its own. We need to establish preservation strategies to capture both the scientific knowledge it contains and the metadata to comprehend its context.</p><p>To ensure preservation of source code, three actors in the French and international research community have collaborated to provide a place for researchers to deposit their source code.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Hyper Articles en Ligne a.k.a HAL</head><p>The first actor in this collaboration is HAL, the French national open access repository, created in 2000 by the French National Centre for Scientific Research (CNRS 6 ) and maintained by the the Center for Direct Scientific Communication (CCSD), destined to provide tools for archiving and dissemination of scientific outputs openly. HAL is a repository where researchers can deposit their academic outputs compliant with their copyrights<ref type="foot" target="#foot_1">7</ref> . Since its creation, HAL has supported different types of deposits: publications, documents (e.g pre-prints and reports), academic work (e.g theses) and research data (e.g images, videos). HAL's goal is to make research as accessible and open as possible.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IES Inria</head><p>Another collaborator in this effort is Inria, the French National Institute for computer science and applied mathematics. Inria Created in 1967 , it currently hosts in its teams over 3000 researchers<ref type="foot" target="#foot_2">8</ref> and supports the creation of a broad spectrum of open source software, including award winning projects such as Coq, OCaml, and Sckit-Learn.</p><p>The research center has a dedicated scientific and technical information service, denoted IES-Inria, which played a major role when specifying the new type of research output: software source code, shown in <ref type="bibr" target="#b1">(Barborini et al., 2018)</ref>.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Software Heritage (SWH)</head><p>The third collaborating initiative is Software Heritage, a nonprofit organization whose goal is building the Library of Alexandria for software source code by collecting, preserving and making the source code available in the long term, as detailed in <ref type="bibr" target="#b0">(Abramatic et al., 2018)</ref> and <ref type="bibr" target="#b2">(Di Cosmo and Zacchiroli, 2017)</ref>.</p><p>Software Heritage initiated this collaboration, due in part because of its primary goal and practical knowledge of how to implement software preservation workflows.</p><p>These three collaborators designed and implemented a complete workflow dedicated to research source code artifacts that involves three major steps:</p><p>1. depositing software source code on HAL's platform 2. moderating and curating the deposit by a certified IES-Inria moderator 3. sharing the deposit and pushing the deposit to the SWH archive Thanks to this fruitful collaboration software deposits were integrated into the document types supported by HAL, in September 2018.</p><p>In this article, we detail the workflow for curating the deposit of software artifacts in the HAL open access repository and the guidelines put in place for the people involved in the process. We describe the transition from test phase to the global integration. Then, we share the lessons learned from the implementation and usage of the source code deposit and the specified workflow. We conclude by presenting the next steps in our software deposit roadmap. doi:10.2218/ijdc.v0i0.0</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A workflow for curating the deposit of software artifacts</head><p>From the earliest open repositories to now, moderation has been a key part of the submission workflow when self-archiving research outputs. One prominent example is ArXiv<ref type="foot" target="#foot_3">9</ref> , founded in 1991 and operated by the Cornell University. Today, there exist platforms that offer source code deposit, such as Zenodo and Figshare, but do not have any pre-submission checks for the self-archived content. HAL chose to follow ArXiv's example<ref type="foot" target="#foot_4">10</ref> and implement a sophisticated moderation workflow in order to ensure that quality metadata is attached to every deposit into the platform.</p><p>In order to extend the existing HAL moderation workflow to support deposits of research software, a similar workflow had to be implemented to handle the following aspects:</p><p>• artifacts attribution,</p><p>• classification,</p><p>• compliance with metadata requirements,</p><p>• and appropriate content. As described in detail in <ref type="bibr" target="#b0">(Alliez et al., 2019)</ref>, keeping the humans in the loop, similarly to the ArXiv moderation (ArXiv moderators, 2019), is essential to have quality metadata and better credit attribution. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The submission form</head><p>Contributors must fill out a descriptive metadata form on submission, to ensure the most accurate information about the source code is captured. The metadata is used for moderating the submission and is preserved with the software in both HAL and the SWH archive. The design of the form was adapted from the pre-existing deposit form for scientific articles, see figure <ref type="figure" target="#fig_2">3</ref> where you can choose the software type and add a software license. The HAL metadata schema included terms that are applied to all deposits (e.g author, title and keywords, etc.) However, it wasn't sufficient to describe software artifacts. Software requires more specific elements in addition to these to adequately describe its complexities. We researched the software vocabulary landscape for a vocabulary adapted to scientific software, and we found that the CodeMeta vocabulary was a perfect fit. A refinement of the schema.org classes SoftwareApplication and SoftwareSourceCode, it provides a convenient bridge with linked data and the semantic web. In addition the core metadata for software is compliant with existing standards like TEI and Dublin Core.</p><p>In Table <ref type="table" target="#tab_0">1</ref>, we compare the HAL metadata terms with the following legend:</p><p>• regular text: term that already existed for an article deposit</p><p>• bold text: term that is mandatory with the software source code deposit The Software deposit guidelines</p><p>We identified that a set of requirements beyond this submission form was needed to curate software deposits. To this end, we have created two user guides, one for the researchers that submit the software <ref type="bibr">(Gruenpeter and Sadowska, 2018a)</ref>, and one for the digital archivist in charge of the moderation <ref type="bibr" target="#b6">(Gruenpeter and Sadowska, 2018b)</ref>.</p><p>When researchers want to archive and share their code as a citable artifact, they can submit it to either the main HAL instance 11 or on a specific institutional instance (e.g. Inria's instance<ref type="foot" target="#foot_5">12</ref> ). No matter where the deposit lives, all materials are discoverable on the central HAL instance.</p><p>In the current implementation, researchers must provide a compressed archive, containing the source code (mostly text files) .</p><p>Researchers are asked to prepare the software source code archive, before submission, by adding the following files:</p><p>• AUTHORS To help researchers and ensure uniformity of the submited metadata, we have added auto-completion for the license property, using normalised terms directly extracted from the SPDX reference standard, developed and maintained by the software industry. 11 The main HAL instance on hal.archives-ouvertes.fr doi:10.2218/ijdc.v0i0.0</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Curating software -including humans in the loop</head><p>The professionals curating deposits into HAL are librarians and archivists. They are employed by specific institutions, if the institution has authority over its institutional repository (e.g Inria and University of Lorraine) or directly by the CCSD which operates HAL and all attached services. The curation of deposited digital artifacts is one of the roles they assume as information experts. Most of these librarians and archivists have a background in academic institutions, and curating these deposits is one of their key responsibilities.</p><p>The process of moderating source code deposits requires human intervention, which leads to direct interactions between the submitting researcher and these curators.</p><p>These consultations center around the metadata attached to the deposit rather than the source code itself, although a mild inspection of the code is done to ensure the metadata describing it is correct.</p><p>Functional or scientific evaluation of the artifact are not in the scope of the moderation process put in place for HAL software deposit: that role belongs not to repositories or archives, but to reviewing committees. These committees might review software to verify installation instructions, documentation, functionality and tests. Examples of how this is done can be seen loking at the Information Processing On Line Jounral <ref type="bibr">(IPOL team, 2019)</ref>, that has been publishing software implementing image processing algorithm for almost a decade, or the Journal of Open Source Software, which includes many of these criteria in their review guidance documentation <ref type="bibr">(JOSS team, 2019)</ref>.</p><p>A growing number of conferences<ref type="foot" target="#foot_7">14</ref> have an artifact Evaluation Committee (AEC) that evaluates the software artifacts associated to the submitted articles. For example, the POPL conference has an artifact Evaluation Process (AEP) since 2015, where the AEC checks for consistency with the paper, good documentation, and reusability for further research <ref type="foot" target="#foot_8">15</ref> . Artifact evaluation is now also encouraged by the Association of Computing Machinery (ACM) with the ACM badges<ref type="foot" target="#foot_9">16</ref> , which can be awarded if the evaluation criteria are met.</p><p>By contrast, the HAL moderation process only verifies the accuracy of the descriptive information regarding a deposited software source code artifact and the accuracy of its attribution. During the process the digital archivist also inspects the artifact to check that the content included in the archive does fit a research deposit. The deposit will not be reviewed in the academic sense of the term, so the functionality of the source code or its reproducibility are not verified. In figure <ref type="figure" target="#fig_3">4</ref>, the contribution and moderation workflow is detailed with the actions that each actor will make to ensure proper archiving of source code. First, the contributor (which can be a researcher, a team member or an institutional representative in charge of the contribution) will prepare the artifact as detailed in the software deposit guidelines, upload the compressed archive, and add metadata on the submission form. Then, the will review the deposit by verifying that the metadata matches the artifact itself and the values in the submission form. The moderator will also check for extraneous content, for example videos, images, or other material that is unlikely to be part of a software source code bundle. If the contributor has listed a code repository, the moderator will verify that the authors of the deposit and in the code repository are the same, even if using pseudonyms, to ensure due credit is given.</p><p>Our experience over the first two years of operation shows that, with the support of the guidelines, the software moderation process does not add greatly to the workload of digital archivists, and can be performed by digital archivists.</p><p>The IES-Inria and CCSD teams, which play the role of digital archivists for HAL platform, are used to working with articles, reports and other textual deposit types. The software deposit was very different from that which they were used to review. When doi:10.2218/ijdc.v0i0.0 establishing the requirements for a software deposit, we realized that there is no need, at this point, to act as an AEC and verify the functionality, the quality and reproducibility of the artifact itself.</p><p>Therefore, the main actions the digital archivist performs while reviewing software deposit are:</p><p>• detecting extraneous or abusive content (illegal or harassing),</p><p>• verifying consistency between the metadata and the software source code itself,</p><p>• completing or correcting the deposit metadata if needed.</p><p>During the review process, the digital archivist can request modifications to the deposit from the contributor using a request ticket system, providing a channel with prewritten responses for identified recurrent issues.</p><p>Communicating with the contributors and researchers, during the test phase, over their deposits enriched the curation process and helped creating better specifications for the HAL software source code deposit guidelines.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Transferring source code from HAL to SWH</head><p>The Hal platform had already implemented transfers of content to Arxiv via the SWORD protocol, available on HAL's documentation <ref type="bibr">(CCSD Development team, 2017)</ref>. The same integration between HAL and SWH has been designed and implemented using the same protocol.</p><p>The deposit is automatically pushed to SWH after a moderator has validated the submission. On reception the deposit is verified by an automated tool. If the verification passes, the deposit is published on HAL's platform and the deposit is scheduled for ingestion in the SWH archive. Otherwise, a detailed error is returned.</p><p>The SWORD 2.0 <ref type="bibr">(Jones and Lewis , 2013</ref>) implementation provides the technical interface between a client (HAL) and a server (SWH) to push deposits of software source code with associated metadata, available on the API documentation (Software Heritage Development team, 2017). First, when a deposit arrives to SWH, an automated verification insures the artifact contains a compressed archive and the associated metadata. After it is verified, the ingestion of the content into the archive starts, as illustrated in figure <ref type="figure" target="#fig_4">5</ref>.</p><p>During the ingestion of the software artifact, SWH computes an intrinsic identifier, the SWH-ID, using a cryptographic signature of the software artifact, see Di <ref type="bibr">Cosmo, Gruenpeter and Zacchiroli (2018)</ref> for a detailed explanation.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>IJDC | Peer-Reviewed Paper</head><p>doi:10.2218/ijdc.v0i0.0 <ref type="bibr">Di Cosmo,</ref><ref type="bibr">Gruenpeter,</ref><ref type="bibr">Marmol,</ref><ref type="bibr">Monteil,</ref><ref type="bibr">Romary and Sadowska | 11</ref> This SWH-ID does not depend on a resolver, and allows to identify the deposit no matter the future developments and organizational changes. This SWH-ID is presented alongside the HAL-ID on the Software artifact view on the HAL platform.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The software view</head><p>The deposited software artifacts are accessible on the HAL platform in a specific software view, as presented in figure <ref type="figure">6</ref>, with the complete metadata record and offers several services :</p><p>• TEI, DublinCore or Bibtex exports • the link to the browsable source code on SWH, in figure 7 </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>From test phase to global integration</head><p>After we defined the specifications and requirements for the software source code deposit, the CCSD and SWH engineers built a prototype which was only accessible on HAL-Inria, and provided a first test of a software deposit and the HAL to SWH integration.</p><p>Between February 2018 and July 2018, a panel of researchers were invited to test the software deposit, described in <ref type="bibr" target="#b1">(Barborini et al. 2018)</ref>. Their feedback was integrated into the final version and contributed to improve the deposit guidelines. Throughout this period, the IES-Inria digital archivists tested the moderation process. With their input, a few ergonomic changes were made to the moderation view and the standardised responses to request changes from submitters. During the test phase, 12 software artifacts were uploaded.</p><p>The test phase was incredibly valuable for creating and consolidating specific guidelines for the contributors and for the moderators.</p><p>The official opening of the software artifact deposit for all HAL instances was on the 25th of September 2018 and was reported by the local press.</p><p>In December 2019, we can count 80 source code deposits and 98 software records deposits, which is a promising start for curating software deposits as a research output.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Deposits without source files</head><p>During the test phase, researchers could also deposit metadata records about source code without the source code itself, similar to "bibliographic records." Occasionally, users have chosen to deposit only descriptive information about a software artifact, because they needed the reference to the software record in their activity reports. The clear drawback is that it is impossible for the digital archivist to check the information deposited. One approach is to prevent software deposit without the software source code itself, which would be a compressed static archive without its development history.</p><p>While this approach is reasonable for researchers that do not use collaborative development platforms, it turns out to be an annoyance for those that have made their software source code available online, or even archived it already in SWH.</p><p>The next version of software deposit in HAL should allow to provide just the link to SWH, or to the code repository, where it will be possible for SWH to fetch the source code instead of uploading a compressed archive, lowering the barrier for software deposits into HAL</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Lessons learned</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Open issues</head><p>We have handled a variety of deposits since the service has been open, and discovered interesting corner cases that led us to evolve our software deposit policy:</p><p>• Collective authorship: sometimes we receive the request to use the team name as the software author, instead of providing the full list of contributors. We are evaluating the possibility of a solution of supporting one collective author, and at the same time have a sort of "corresponding author" for managing the deposit;</p><p>IJDC | Peer-Reviewed Paper doi:10.2218/ijdc.v0i0.0 <ref type="bibr">Di Cosmo,</ref><ref type="bibr">Gruenpeter,</ref><ref type="bibr">Marmol,</ref><ref type="bibr">Monteil,</ref><ref type="bibr">Romary and Sadowska | 13</ref> Also, we keep in mind that authorship can be established only with a clear link between a person and a deposit, which is difficult with the collective authorship;</p><p>• Legacy software: software that was created a long time ago should be archived in its original state, but it would be useful to add extra information to describe its origin. We are working on a dedicated standard for this particular use case; • Software collections: sometimes researchers try to deposit a single archive containing many different software tools or software libraries; • Research experiments that do not really qualify as a software tool on their own;</p><p>for this particular use case, the researchers usually only need long term archival and intrinsic identifiers: we plan to refer them to the dedicated guidelines for source code archival and reference available on the Software Heritage website (Di Cosmo, 2019); • Software source code deposited that include large datasets, instead of a reference to a separate data deposit.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>The importance of a software license</head><p>During the test phase the license of the software wasn't a mandatory metadata and the user form didn't instruct users how to choose a license. As could be expected, this led to deposits with many variations in the software license names and even deposits without a license. Hence we made the license mandatory, and we now provide autocompletion for license names using the standard list developed by the SPDX project of the Linux Foundation for a large consortium of industry players.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Publishing versus sharing</head><p>Research software has been around for decades, and some research institutions have a long experience in managing it as a valuable output of research <ref type="bibr" target="#b0">(Alliez et al., 2019)</ref>, but only very recently attention has started to grow in the broader scholarly ecosystem. This new interest has spawned a rich discussion about what actually could be a software publication. In this context we would like to stress the importance of remembering that in the scholarly world there is a precise semantics attached to the term publication: an academic publication is a research result that has been qualified through some form of peer review; a result that has been simply shared, for example by making it available somewhere on the Internet, is usually not regarded as a publication<ref type="foot" target="#foot_10">17</ref> . When we come to software, that is in its vast majority developed outside of academia, and in particular to open source software, it is common practice to share it broadly on code hosting platforms like GitHub, GitLab, and many other ones, but this act of sharing does not carry the same meaning as the act of academic publishing, and code hosting platforms do not play at all the same role as publishers in the academic world.</p><p>Hence we should refrain from using the term "publication" when we talk about software that is simply shared on the Internet, even when its source code is deposited on institutional archives. The research community is still exploring how to exactly handle software when it comes to credit and academic recognition, with various ongoing experimentations like the AEC, IPOL, the Journal of Open Source Software <ref type="bibr">(JOSS doi:10.2218</ref><ref type="bibr">(JOSS doi:10. /ijdc.v0i0.0 team, 2019;;</ref><ref type="bibr" target="#b12">Smith et al., 2018)</ref>, the Dagsthul DARTS series<ref type="foot" target="#foot_11">18</ref> , ACM Badges, etc: it is up to researchers to reach an agreement on this very sensitive issue.</p><p>For this reason, in the metadata for software deposited via HAL, we do not indicate HAL as a publisher.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Keeping the human in the loop</head><p>Even if we do not know yet what should qualify as a software publication, we do know that we need quality metadata to describe research software, and to be used for citing software artifacts. We argue that this requires human intervention, and that it is not enough to just share software on code hosting platforms like GitHub, or self-archive it on repositories like Figshare or Zenodo. This is why for deposit in HAL and archival in SWH a moderation process is put in place: to ensure that the deposit is a software artifact that reflects a scientific endeavour and that due credit is attributed to all authors of the software without a quality and functionality review of the source code.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Software Identification, reference and citation</head><p>We follow the Software Citation Principles <ref type="bibr" target="#b11">(Smith et al. 2016)</ref> to create a citation for software deposits into HAL. In figure <ref type="figure" target="#fig_6">8</ref>. we have proposed a citation format containing metadata submitted with the software deposit, which is already available on the HAL platform. In the citation format, two identifiers are used: the first for the research product, the HAL-ID and the second for the software source code itself with the SWH-ID of the root directory containing the complete development tree. While the HAL-ID identifies the metadata and thus the attribution of the research product, the SWH-ID references the exact version of software source code associated to the deposit. Each identifier caters to different use cases.</p><p>At the moment we are working on a proposal for a specific BibTex @software entry as it was already introduced in BibLateX (Kime, Wemheuer and Lehman, 2019) to provide a better BibTex export on the HAL platform. The proposal is developed with Inria's citation working group and will be shared with FORCE11's Software Citation Implementation WG <ref type="foot" target="#foot_12">19</ref> and RDA Software Source Code IG<ref type="foot" target="#foot_13">20</ref> for feedback.</p><p>The proposal development is public and can be viewed and commented on its dedicated repository<ref type="foot" target="#foot_15">21</ref> .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Conclusion</head><p>Decades of experience handling research projects at Inria have shown that a proper moderation process is important to ensure the high quality of the metadata associated to the research software artifacts. To support this process, the collaboration between Software Heritage, Inria and HAL has created tools and guidelines that enable digital archivists to efficiently handle research software deposits, and offers to the HAL users dedicated services for helping preserving and disseminating their software artifacts. We believe that this is an important step forward in the long journey to make software a first class research output in the scholarly ecosystem. On the HAL-CCSD-Inria-SWH collaboration roadmap, there are a few milestones ahead: allowing the deposit of metadata with a link to a code repository which will be archived in SWH or a direct reference to a SWH artifact with the SWH-ID; exporting BibTeX format with a complete @software entry; exporting other software citation formats (e.g codemeta.json); improving links between teams, people, articles and data to software deposits; and improving the researchers CV export with software research outputs. We believe that these improvements will encourage researchers to share their software and benefit the research and digital curation communities.</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. The Open Science pillars for sharing articles, data and software.</figDesc><graphic coords="3,198.10,290.20,199.10,113.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. The deposit workflow on the HAL platform and archiving into SWH</figDesc><graphic coords="5,140.50,410.30,314.40,225.30" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. The software deposit form on the HAL-Inria instance platform</figDesc><graphic coords="6,89.20,121.50,425.20,273.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. The moderation process when reviewing a software artifact for archival</figDesc><graphic coords="10,85.10,99.40,425.20,362.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. The deposit status on the Software Heritage archive</figDesc><graphic coords="11,95.20,522.10,333.00,119.20" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 6 .Figure 7 .</head><label>67</label><figDesc>Figure 6. A software deposit on the HAL platform</figDesc><graphic coords="12,117.30,248.60,363.80,295.80" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 8 .</head><label>8</label><figDesc>Figure 8. The proposed citation for software artifacts on the HAL platform.</figDesc><graphic coords="15,121.10,425.70,282.00,113.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0"><head>Table 1 .</head><label>1</label><figDesc>The descriptive metadata to ensure an accurate description of the source code artifact</figDesc><table><row><cell>Software source code</cell></row></table><note><p>• italic text: term specifically added for software doi:10.2218/ijdc.v0i0.0 IJDC | Peer-Reviewed Paper doi:10.2218/ijdc.v0i0.0 Di Cosmo, Gruenpeter, Marmol, Monteil, Romary and Sadowska | 7</p></note></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_0"><p>http://www.cnrs.fr/en/cnrs IJDC | Peer-Reviewed Paper doi:10.2218/ijdc.v0i0.0 Di Cosmo, Gruenpeter, Marmol, Monteil, Romary and Sadowska | 3</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="7" xml:id="foot_1"><p>https://u-paris.fr/hal-archives-ouvertes/ accessed on28.11.2019   </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="8" xml:id="foot_2"><p>https://www.data.gouv.fr/fr/organizations/inria/ accessed on 28.11.2019</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="9" xml:id="foot_3"><p>https://arxiv.org/ accessed on28.11.2019   </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="10" xml:id="foot_4"><p>https://arxiv.org/help/moderation accessed on 28.11.2019 IJDC | Peer-Reviewed Paper doi:10.2218/ijdc.v0i0.0 Di Cosmo, Gruenpeter, Marmol, Monteil, Romary and Sadowska | 5</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="12" xml:id="foot_5"><p>The Inria instance on hal.inria.fr</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="13" xml:id="foot_6"><p>spdx.org: The SPDX License List is a list of commonly found licenses and exceptions used in free and open source and other collaborative software or documentation.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="14" xml:id="foot_7"><p>See the list maintained at https://www.art i fact-eval.org/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="15" xml:id="foot_8"><p>https://popl19.sigplan.org/track/POPL-2019-artifact-Evaluation</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="16" xml:id="foot_9"><p>https://www.acm.org/publications/policies/artifact-review-badging</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="17" xml:id="foot_10"><p>In BibTeX, for example, the entry unpublished is used for material that has not been formally published.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="18" xml:id="foot_11"><p>https://www.dagstuhl.de/publikationen/darts/</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="19" xml:id="foot_12"><p>https://www.force11.org/group/software-citation-implementation-working-group</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="20" xml:id="foot_13"><p>https://www.rd-alliance.org/groups/software-source-code-ig</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" xml:id="foot_14"><p>Di Cosmo, Gruenpeter, Marmol, Monteil, Romary and Sadowska |  </p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="21" xml:id="foot_15"><p>https://gitlab.inria.fr/gt-sw-citation/BibTeX-sw-entry</p></note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACM Classification</head><p>ClassCode:acm</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Acknowledgements</head><p>This work is partially supported by the FAIRsFAIR European project. We thank Vicky Steeves, from New York University, for her valuable comments on a preliminary version of this article.</p></div>
			</div>

			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Attributing and Referencing (Research) Software: Best Practices and Outlook from Inria</title>
		<author>
			<persName><forename type="first">Jean-François</forename><surname>Abramatic</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Roberto</forename><surname>Di</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cosmo</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Stefano</forename><surname>Zacchiroli ; Alliez</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Di Cosmo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Guedj</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Girault</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Hacid</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><forename type="middle">S</forename><surname>Legrand</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Rougier</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><forename type="middle">P</forename></persName>
		</author>
		<idno type="DOI">10.1145/3183558</idno>
		<idno>doi:10.2218/ijdc.v0i0.0</idno>
		<ptr target="https://blogs.cornell.edu/arxiv/2019/08/29/our-moderation-process/" />
	</analytic>
	<monogr>
		<title level="m">Our Moderation Process. In arXiv.org blog</title>
		<imprint>
			<publisher>IEEE, In press</publisher>
			<date type="published" when="2018">2018. 2019. 2019</date>
			<biblScope unit="volume">61</biblScope>
			<biblScope unit="page" from="1" to="14" />
		</imprint>
	</monogr>
	<note>-02135891v2 ⟨ ⟩ [blog post] ArXiv moderators</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">The creation of a new type of scientific deposit: Software</title>
		<author>
			<persName><forename type="first">Y</forename><surname>Barborini</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Di Cosmo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">R</forename><surname>Dumont</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gruenpeter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Marmol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Monteil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sadowska</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zacchiroli</surname></persName>
		</author>
		<ptr target="https://api.archives-ouvertes.fr/docs/sword" />
	</analytic>
	<monogr>
		<title level="m">Documentation API-HAL: Import SWORD</title>
		<meeting><address><addrLine>Berlin, Germany</addrLine></address></meeting>
		<imprint>
			<publisher>CCSD Development team</publisher>
			<date type="published" when="2017">2018. 2017</date>
		</imprint>
	</monogr>
	<note>RDA Eleventh Plenary Meeting</note>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Software heritage: why and how to preserve software source code</title>
		<author>
			<persName><forename type="first">R</forename><surname>Di Cosmo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Di Cosmo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zacchiroli</surname></persName>
		</author>
		<ptr target="https://hal.archives-ouvertes.fr/hal-01590958/" />
	</analytic>
	<monogr>
		<title level="m">How to use Software Heritage for archiving and referencing your source code: guidelines and walkthrough. hal-02263344 , ⟨ ⟩ see also</title>
		<meeting><address><addrLine>Kyoto, Japan</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2017-09">2019. 2017. Sep 2017</date>
			<biblScope unit="page" from="1" to="10" />
		</imprint>
	</monogr>
	<note>iPRES 2017-14th International Conference on Digital Preservation</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Identifiers for Digital Objects: the Case of Software Source Code Preservation</title>
		<author>
			<persName><forename type="first">R</forename><surname>Di Cosmo</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gruenpeter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Zacchiroli</surname></persName>
		</author>
		<idno type="DOI">10.17605/OSF.IO/KDE56</idno>
	</analytic>
	<monogr>
		<title level="m">iPRES 2018-15th International Conference on Digital Preservation</title>
		<meeting><address><addrLine>Boston</addrLine></address></meeting>
		<imprint>
			<publisher>United States</publisher>
			<date type="published" when="2018-09">2018. Sep 2018</date>
			<biblScope unit="page" from="1" to="9" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title/>
		<author>
			<persName><forename type="first">⟨</forename><forename type="middle">⟩</forename></persName>
		</author>
		<idno type="DOI">10.17605/OSF.IO/KDE56</idno>
		<idno>hal-01865790v4</idno>
		<imprint/>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title level="a" type="main">Create software deposit: User guide and best practices</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gruenpeter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sadowska</surname></persName>
		</author>
		<ptr target="https://hal.archives-ouvertes.fr/hal-01872189" />
	</analytic>
	<monogr>
		<title level="m">Inria; CCSD; Software Heritage</title>
		<imprint>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>a)</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">Moderate software deposit A guide and best practices for the digital archivist</title>
		<author>
			<persName><forename type="first">M</forename><surname>Gruenpeter</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Sadowska</surname></persName>
		</author>
		<ptr target="https://unesdoc.unesco.org/ark:/48223/pf0000366715.locale=en" />
	</analytic>
	<monogr>
		<title level="m">Paris Call: Software Source Code as Heritage for Sustainable Development</title>
		<imprint>
			<publisher>UNESCO-Inria expert meeting</publisher>
			<date type="published" when="2018">2018b. 2019. 2019</date>
		</imprint>
	</monogr>
	<note type="report_type">Technical Report</note>
	<note>IPOL team, Information Processing On Line policy</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">JOSS review criteria</title>
		<author>
			<persName><forename type="first">R</forename><surname>Jones</surname></persName>
		</author>
		<author>
			<persName><forename type="middle">S</forename><surname>Lewis</surname></persName>
		</author>
		<idno type="DOI">10.2218/ijdc.v0i0.0</idno>
		<ptr target="origin=https://github.com/openjournals/jossIJDC" />
		<imprint>
			<date type="published" when="2013">2013. 2019</date>
		</imprint>
	</monogr>
	<note>html also available swh:1:cnt:bcce0f89bd9a8e70e63a4d2d67e99b3cfb1f9d8f</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<author>
			<persName><forename type="first">Di</forename><surname>Cosmo</surname></persName>
		</author>
		<author>
			<persName><surname>Gruenpeter</surname></persName>
		</author>
		<author>
			<persName><surname>Marmol</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Romary</forename><surname>Monteil</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Sadowska | 17 ; Kime</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Wemheuer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Lehman</surname></persName>
		</author>
		<ptr target="http://mirrors.ibiblio.org/CTAN/macros/latex/exptl/biblatex/doc/biblatex.pdf" />
		<title level="m">The biblatex Package Programmable Bibliographies and Citations Specifications</title>
		<imprint>
			<date type="published" when="2019">2019</date>
		</imprint>
	</monogr>
	<note>Version 3.13</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Self-Archiving Software in Institutional Repositories: Identifying Problems and Proposed Solutions</title>
		<author>
			<persName><forename type="first">J</forename><surname>Michael</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Milliken</surname></persName>
		</author>
		<idno type="DOI">10.5281/zenodo.1327310</idno>
		<ptr target="https://investigating-archiving-git.gitlab.io/updates/Self-Archiving-Software-in-IRs/" />
	</analytic>
	<monogr>
		<title level="m">IASGE project blog</title>
		<imprint>
			<date type="published" when="2018">2018. 2019</date>
		</imprint>
	</monogr>
	<note>Zenodo</note>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Software Release Practice HOWTO</title>
		<author>
			<persName><forename type="first">E</forename><forename type="middle">S</forename><surname>Raymond</surname></persName>
		</author>
		<ptr target="https://www.tldp.org/HOWTO/html_single/Software-Release-Practice-HOWTO/" />
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Software citation principles</title>
		<author>
			<persName><surname>Smith</surname></persName>
		</author>
		<idno type="DOI">10.7717/peerj-cs.862</idno>
		<ptr target="http://doi.org/10.7717/peerj-cs.862" />
	</analytic>
	<monogr>
		<title level="j">PeerJ Com-put. Sci</title>
		<imprint>
			<biblScope unit="volume">2</biblScope>
			<biblScope unit="page">86</biblScope>
			<date type="published" when="2016">2016</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">Journal of Open Source Software (JOSS): design and first-year review</title>
		<author>
			<persName><forename type="first">A</forename><forename type="middle">M</forename><surname>Smith</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">E</forename><surname>Niemeyer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><forename type="middle">S</forename><surname>Katz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><forename type="middle">A</forename><surname>Barba</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Githinji</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Gymrek</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">D</forename><surname>Huff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><forename type="middle">R</forename><surname>Madan</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Cabunoc</forename><surname>Mayes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Moerman</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><forename type="middle">M</forename><surname>Prins</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Ram</surname></persName>
		</author>
		<author>
			<persName><forename type="first">K</forename><surname>Rokem</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Teal</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><forename type="middle">K</forename></persName>
		</author>
		<author>
			<persName><forename type="first">Valls</forename><surname>Guimera</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Vanderplas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><forename type="middle">T</forename></persName>
		</author>
		<idno type="DOI">10.7717/peerj-cs.147</idno>
		<ptr target="https://doi.org/10.7717/peerj-cs.147" />
	</analytic>
	<monogr>
		<title level="j">PeerJ Computer Science</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<date type="published" when="2018">2018</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title level="a" type="main">Software Heritage -Deposit: API specifications</title>
		<ptr target="https://docs.softwareheritage.org/devel/swh-deposit/index.html" />
	</analytic>
	<monogr>
		<title level="m">Software Heritage Development team</title>
		<imprint>
			<date type="published" when="2017">2017</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
