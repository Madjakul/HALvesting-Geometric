<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A model oriented approach to the mapping of annotation formats using standards</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Florian</forename><forename type="middle">S</forename><surname>Zipser</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">HUB-IDSL</orgName>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Laurent</forename><surname>Romary</surname></persName>
							<affiliation key="aff1">
								<orgName type="institution">INRIA-Gemo &amp; HUB-IDSL</orgName>
							</affiliation>
						</author>
						<title level="a" type="main">A model oriented approach to the mapping of annotation formats using standards</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">EAD93DEF97D1865ACEB04780DFD7CDAB</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-08-24T15:00+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>In this paper, we present, Salt, a framework for mapping heterogeneous linguistic annotation formats into each other using a model-based approach, i.e. independently of the actual formats in which the corresponding linguistic data is being expressed. As we describe the underlying concept of this framework, we identify how it echoes ongoing standardisation activities within ISO committee TC 37/SC 4, and in particular, the possible conceptual equivalences with ISO CD 24612 (LAF) combined with ISO 24610-1 (FSR), as well as the possible role of the central data category registry (ISOCat), currently under deployment. We thus show the adequacy of our methodology and its capacity to integrate a wide range of possible linguistic annotation models.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>1 The issue of mapping and the current standardization landscape</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">The importance of mapping when managing heterogeneous language resources</head><p>Over the years, the linguistic research community has seen the development of a wide variety of tools <ref type="bibr">([schmidt02]</ref>, <ref type="bibr">[lezius02]</ref> and <ref type="bibr">[zeldes09]</ref> specifically targeted at the extraction, representation and analysis of many different phenomena. For example, a tool such as the search tool Tiger Search <ref type="bibr">[lezius02]</ref> was primary developed for syntactic analysis, whereas a tool like the annotation tool EXMARaLDA <ref type="bibr">[schmidt02]</ref> covers discourse analysis. Most of these tools are built around the use of one specific format, which was developed specifically for this tool and for a certain type of analysis.</p><p>The focus of such formats has in general been to supply all necessary information for the tool to proceed in an efficient manner (limited coverage, optimized representation). Because of their specialization, these formats are difficult to reuse in other contexts for which they were not intended.</p><p>Providing standardized formats is one of the possible answers to this issue. One of the benefits of a standardized format can be the interoperability between tools or the keeping of existing data for some years and being assured these will also be legible in the future. At present, however, there is very few linguistic data that is represented in standardized formats. As long as the tools do not have a direct import or export for standardized formats, it would be necessary to map the used formats from or to standardized formats. As a consequence, defining mappings between existing formats and more standardized representations represents an important component of any further development relying on the use of external data.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Difficulties related to mapping formats</head><p>Existing standards such as LAF <ref type="bibr">[iso24612 ]</ref>, MAF <ref type="bibr">[iso24611]</ref> or SynAF <ref type="bibr">[iso24615]</ref> mainly focus on the provision of persistent models and formats to provide a stable descriptive framework for linguistic information. In particular, they do not address the mapping between themselves and the already used formats, with the exception of ISO 16642 (TMF), which provide an explicit mapping framework across terminological data formats. It is thus necessary to define appropriate solutions to get existing data into standard formats by 1) defining a conceptual mapping between them and 2) having a concrete implementation which realizes the mapping thus defined. Most standards, because they basically aim at providing an interchange format, include a strong technical part to specify, for instance, how they can be implemented in a given XML representation or a relational database structure. In this context, it is quite often the case that the very existence of such format definitions, with the associated technical constraints, impact on the actual expressive power of the corresponding model. For example, an attribute value of an XML element cannot contain additional mark-up. To create a mapping, one therefore has to consider both the conceptual mapping and the technical realizations. This requires the implementer to have a good level of understanding of the underlying format description, for instance expressed by means of a schema language (DTD, RelaxNG or W3C schema) in the case of XML. Covering both aspects makes the mapping generation extremely complex, for anyone who just wants to focus on the underlying linguistic concepts or constraints.</p><p>A conceptual mapping has to cover two aspects. First, there has to be a mapping for each structural object like the representation of tokens or representations of primary data. Second, the mapping has to regard semantic mappings for data categories. In this paper we want to propose an approach to structural mappings via a model like Salt (introduced in section 2) and a semantic mapping using the ISOCat <ref type="bibr">[kemps09]</ref> system (shown in section 3).</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.3">A model based approach to mapping</head><p>A solution for clarifying the actual interdependence between conceptual and technical levels is to adopt a model-based approach as for instance in MDA <ref type="bibr">([miller03]</ref>). The idea is to separate the meaning of data (the model layer) from their representation (the format layer, cf. figure <ref type="figure" target="#fig_0">1</ref>) especially in the case of persistence constraints. When a separation between a conceptual model and a persistent format is made, one can avoid taking care of persistence issues and focus on processing data through the elicitation of a mapping between models. For example, a specialist in the linguistic domain, can create or describe a mapping between two morphosyntactic tagsets, leaving it for a further stage, and a more technical expertise, to implement a mapping for the underlying formats.</p><p>Model-based development frameworks such as MDA <ref type="bibr">[miller03]</ref> or EMF <ref type="bibr">[steinberg09]</ref> support 1) a graphical representation for models and 2) a generation of processable object models for further work (in terms of an API for instance). The graphical representation of a model can be used as a communication base between linguists and technical experts. The generated API can be used for implementing tools working with the model, such as an annotation tool or, in our case, a converter.</p><p>The EMF framework that we use also generates a persistent format based on XML. This generated format is called a resource and can be exchanged with other formats, by re-implementing the "ResourceMapper" in figure <ref type="figure" target="#fig_0">1</ref>. Figure <ref type="figure" target="#fig_1">2</ref> shows an example of a resource mapping between the format description of Tiger XML <ref type="bibr">[mengel00]</ref> and the corresponding model. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.4">Same but different -shared advantages with a format based approach</head><p>As pointed out in <ref type="bibr">[ide07]</ref>, the number of mappings can be reduced by mapping data over a common format, or in this case a common model. Instead of creating n 2 -n mappings to map n models to each other in the case of 1:1 mappings, the number of mappings via a common model decreases to 2n mappings. In this paper we want to follow this approach. Figure <ref type="figure">3</ref> shows this approach using a common model for mappings simultaneously to the mapping of data via a pivot format defined by LAF/GrAF <ref type="bibr">[ide07]</ref>.</p><p>In the remaining sections of this paper, we present the main characteristics of the framework that we have developed to implement such a perspective by the comparisons of models. 2 An overview of Salt and its relation to LAF</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Basic principles</head><p>Salt is a common model for linguistic annotated data. This model defines a conceptual abstraction of data, independent of persistence techniques. This means that one can use Salt as an object representation of data. This allows us to process data with respect to the object model, with no prejudice with respect to the actual storage (or linearisation) format, be it XML or a relational database, in which the data will be represented.</p><p>Salt was influenced by several existing linguistic formats such as EXMARaLDA <ref type="bibr">[schmidt02]</ref> TigerXML <ref type="bibr">[mengel00]</ref> and above all PAULA <ref type="bibr">[dipper05]</ref>. Salt unifies the concepts of these formats e.g. common timeline, multiple layers of annotation etc. and represents them in a common model. Salt is a model for representing the underlying organization of linguistic data, and as such, does not take into consideration their underlying semantics. Furthermore, Salt is independent of specific linguistic theories or analyse.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">The underlying graph structure of Salt</head><p>Salt is based upon a directed, labeled and layerable graph structure model. The model contains a graph structure component, which contains 1) a set of nodes or vertices, 2) a set of directed edges, 3) a set of layers, which embraces a set of nodes and edges and 4) a set of labels, used to label a node, an edge, a layer or a label. This means that a label can be used as a recursive structure and therefore enables the possibility to annotate an annotation.</p><p>The Salt model is a refinement of the general graph structure model, in effort to apply Salt to linguistic needs e.g. primary data, tokens, relations, annotations and so on. But every element in Salt is still an element of a general graph structure model and can be processed with general graph structure methods e.g. traversing. Figure <ref type="figure" target="#fig_2">4</ref> shows this refinement on the basis of some elements of Salt. Here one can see, for example that a textual representation of primary data (STextualDS) is still a node. Although nodes get a more linguistic meaning, nodes and relations are just placeholders for annotations. We used the element STextualDS as a model representation of the primary data. Therefore this element contains a String representation of the primary data. Continuous spans of the primary data can be addressed by using the node type SToken and the edge type STextualRelation. A node of type SToken represents the tokenization of the primary data and is the basis for further structural objects and annotation. To relate such a token node with the primary data node, an edge of type STextualRelation can be created. This edge contains the start and end position of the referred span.</p><p>To create hierarchical annotation graphs for example in case of syntactic analysis one can use nodes of type SStructure and relate them via edges of type SDominanceRelation to one or more nodes of type SToken or SStructure. Figure <ref type="figure">5</ref> shows an example of data represented in the Salt model. Salt offers further types of nodes and edges to create annotation graphs which are not shown in figure <ref type="figure" target="#fig_2">4</ref> and not mentioned here. For example it contains further edge types to realize different relations between nodes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Salt and LAF</head><p>The graph-based approach is very similar to the one taken in the linguistic annotation framework (LAF, <ref type="bibr">[iso24612 ]</ref>). Our objective is indeed to let Salt and LAF be identified as complementary tools on their specific abstraction level. LAF can be used as a persistence and exchange format for data whereas Salt can be used 1) as a conceptual abstraction which can be easily understood by non technical experts 2) as basis for a processable API. To do so we need a mapping between the Salt object model and the XML-representation of LAF (the GrAF format <ref type="bibr">[ide07]</ref>). Although both GrAF and Salt are very similar, there are some core differences between them. One is the way they deal with edges: as opposed to GrAF, Salt allows edges to be annotated. A second difference lies in the referencing to primary text: In Salt there is a relation (STextualRelation) between a token node (SToken) and the primary data node (STextualDS), whereas in GrAF there is just one span concept for both. A third difference is that in Salt a copy of primary data is part of the model in terms of a node (see SText1 in figure <ref type="figure">5</ref>). The first two differences can be handled as shown in figure <ref type="figure">5</ref>. The figure shows a Salt model representation and an XML representation according to GrAF. The third difference can be handled by storing primary data in a separate document or by loading primary data from a text file into the Salt model.</p><p>figure 5: on the left side: an example corpus represented in the format GrAF (the primary data "make efforts" can be stored in a external file); on the right side: the same example represented in a Salt model</p><p>Moreover, we developed Salt to be able to take into account some important phenomena that LAF would not handle in its current state:</p><p>• The representation of a common timeline (e.g. for audio-video and dialog data such as those produced by EXMERaLDA)</p><p>• The management of higher level structures, in particular for the implementation of the notion of corpus (in particular, embedded corpus or sub-corpus relations)</p><p>• The typing of annotations e.g. as textual, numeric or more complex values.</p><p>3 The relation of Salt to ISOCat and FSR</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The need to consider the meaning of annotations</head><p>As already mentioned, Salt does not deal with the semantics of annotations. Similarly to GrAF <ref type="bibr">[ide07]</ref> annotations are understood as an attribute-value pair, the entries of which do not have an interpretable meaning for the system. In the case of converting data, the meaning could be important. For example some formats like TreeTagger <ref type="bibr">[schmid94]</ref> need to have part-of-speech or lemma annotations. If these data were mapped in a format or a model which handles annotations as attribute-value pair the meaning of the annotations would get lost. For example a problem occurs if one tries to map to a format which needs specific annotations, because the data for a part-of-speech annotation appear in different forms: pos=verb, POS=verb, PartOfSpeech=verb. Because of different surface representations of the attribute name for part-of-speech, annotations cannot be unified by the system. The system does not know that all these names actually have the same meaning.</p><p>It is therefore essential to have a possibility for unifying syntactical representations, or rather to make clear the meaning of such a representation. In this respect, ISOCat <ref type="bibr">[kemps09]</ref> supplies the possibility of a central reference for elementary descriptors (data points) to which data model can refer. The meaning of a data point can be defined by the experts of the domain, whereas a system just has to check equality of references to the data points. In the case of part-of-speech annotations in format data, we can for instance use the reference http://www.isocat.org/datcat/DC-396, which in turn provides the actual definition of this data point as stored in ISOCat ("A category assigned to a word based on its grammatical and semantic properties").</p><p>Indeed, many formats which support attribute-value pairs for representing annotations only support String values e.g. TigerXML <ref type="bibr">[mengel00]</ref>, PAULA <ref type="bibr">[dipper05]</ref> etc. . This means that a reference can be stored, but not necessarily interpreted as a reference. Thus we have to mark the data type of an attribute as well as of a value as references. In Salt there is a possibility for marking this, therefore we now take a closer look at an annotation. In figure <ref type="figure">5</ref> annotations are shown as simple attributevalue pairs beside the nodes and edges. Annotations are slightly more complex than what figure <ref type="figure">5</ref> shows. The annotation shown in figure <ref type="figure">6</ref> is the same as in figure <ref type="figure">5</ref> beside the node "SToken1" first as a String representation and second as a representation using ISOCat references.</p><p>figure 6: on the left side: an annotation using simple string values as an attribute-value pair; on the right side: an annotation using references to ISOCat</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">Salt and FSR</head><p>As in GrAF, Salt nodes can be multiply annotated. For example, one can attach a part-of-speech and a lemma annotation to one node. But actually in Salt, there is no grouping function for annotations. Every annotation stands alone for itself. GrAF uses feature-structures (FSR) defined by ISO [iso24610-1] and used in the TEI P5 guidelines <ref type="bibr">[burnard08]</ref>. For example some features can be grouped to a "morpho-syntactic annotation". GrAF does not yet support naming or typing of a feature structure as TEI describes (@type attribute in the &lt;fs&gt; element). Figure <ref type="figure">7</ref> shows an example taken from the TEI P5 guidelines for representing a grouping of annotations via feature structures.</p><p>In Salt you can either represent the given three annotations as independent annotations, or you can represent them by using recursive annotations (means creating annotations on annotations). The second way simulates such a grouping as feature structures achieve. Both ways are shown in figure <ref type="figure">8</ref>.</p><p>In addition to the types URI and String, we introduce additional types for annotation names and annotation values. On the one hand, there are additional simple types such as numeric (for numeric data), float, and boolean. On the other hand, there is a complex type called object. This complex type is defined in a flexible way, so that a value of this type can be any kind of object. As a consequence, it is possible to define a complex structure as a collection with conditions on their elements in terms of alternations or negations as mentioned in TEI <ref type="bibr">[burnard08]</ref> chapter 18.</p><p>The main element of Salt is a SaltProject. This element contains the corpus structure. The corpus structure is a tree, which defines super-and sub-corpus relations between corpora. A corpus contains one ore more documents in which the primary data, tokens, hierarchical structures annotations and so one can be found. Additionally to the corpus structure a SaltProject can also contain a library graph structure. This graph structure consists of nodes, which define data points as well as ISOCat do. These nodes can be referenced by URI´s using the scheme salt. A library structure can therefore be modeled as a graph structure. For example the STTS tagset <ref type="bibr">[schiller95]</ref> for German part-of-speech can be described as shown in figure <ref type="figure">9</ref>.</p><p>Figure <ref type="figure">9</ref> contains the nodes "lib1", "lib2", "lib3" and "lib4" as data points. These nodes can be annotated with annotations like entry, for the tagset name, a description, which explains the usage of this tag and an example, which shows the usage in a specific case. The relations between the nodes "lib1", "lib2", "lib3" and "lib4" can be interpreted as a refinement. This means, that the node "lib3" which defines the entry "VVFIN" 1 is also of type "V" 2 . Further we propose a grouping relation to group the represented entries of several nodes under one node. This way of grouping is similar to the grouping function of the "fvLib" element of the FSR. Figure <ref type="figure" target="#fig_0">10</ref> shows the grouping mechanism by using a grouping relation.</p><p>The dashed arrow of figure <ref type="figure" target="#fig_0">10</ref> shows such a grouping relation, whereas the continuous arrow shows a refinement. The node "grp1" groups the nodes "lib3" and "lib4", and also stands for the entry "consonantal" as well as for the entry "vocalic".</p><p>1 tag for a finite full verb in the STTS 2 general tag prefix for a verb in the STTS figure 9: an excerpt of the STTS tagset represented in the library graph structure of Salt. This example shows how refinements between entries can be handled.</p><p>figure <ref type="figure" target="#fig_0">10</ref>: grouping mechanism to group several data points e.g. consonantal and vocalic to one data point. This example is an excerpt from the TEI P5 guidelines (chapter 18).</p><p>To use a data point such as a document structure, one can use the attribute value of an annotation typed as URI. The value than contains a URI entry. This URI starts with the scheme name salt, followed by the path which is the identifier for the library structure and the fragment which is the identifier of a node of the library structure graph. This node either can be a node standing for such an entry as "lib3" for example, or a grouping node as "grp1". Figure <ref type="figure" target="#fig_4">11</ref> shows the referencing mechanism for annotations using a URI value for a reference to the library graph structure.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">Validation (using Salt in Pepper)</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1">What is Pepper?</head><p>To validate the Salt model, we define Pepper, a Salt based converter framework. This framework was developed to convert data from x formats into y different formats, with a constant number of mapping steps. As shown in figure <ref type="figure">3</ref> Salt and Pepper makes it possible to convert several formats via a common model into each other with a minimal number of needed mappings and just two steps.</p><p>Pepper thus forms a use case for Salt with which we can check whether Salt can represent data from several formats. Furthermore, it is possible to trace information losses during conversion operations. For example one can convert a corpus from format A into Salt and then export the data back to format A. The import and export can then be compared for losses.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2">How does Pepper work?</head><p>Pepper can be separated into three components: 1) the framework, 2) a common instance of the Salt model and 3) mappers to several formats. Figure <ref type="figure" target="#fig_1">12</ref> shows the general architecture of Pepper and the relations of the components. The framework controls the given workflow, for example importing a corpus from TigerXML <ref type="bibr">[mengel00]</ref> and exporting it to the EXMARaLDA format <ref type="bibr">[schmidt02]</ref> via Salt. It creates a common instance of the Salt model, which can be used by mappers to import, or export their data. A mapper has to realize a mapping from an external format to the Salt instance, a mapping from the Salt instance to an external format, or both. A mapper is implemented in terms of a module, which can be plugged into the framework. Such a module can either be 1) an import module, 2) a manipulation module or 3) an export module.</p><p>1) An import module maps data from external formats to a Salt instance.</p><p>2) A manipulation module can manipulate a Salt instance, for example by changing the names of an annotation to upper case or to ISOCat data points.</p><p>3) An export module maps data from a Salt instance to an external format.</p><p>The example in figure <ref type="figure" target="#fig_5">13</ref> describes a mapping for an import module between TigerXML <ref type="bibr">[mengel00]</ref> and Salt, with respect to the persistence and the model layer. The mapping can be described as map: TigerXML → Salt and can be done in two ways.</p><p>Both ways address different technical mechanisms, the first one handles the mapping via format techniques with no abstraction between persistence layer and conceptual layer and the second one handles a conceptual mapping on the conceptual layer. For the second way we need to have a mapping between model and format. For this we can modularize the tasks in creating a mapping between model and format for example to the format developer and in creating a mapping, which can be done by another person or team. Figure <ref type="figure" target="#fig_6">14</ref> shows the representations of the three stages of the first way: 1) the data in the origin format Tiger XML, 2) the data in a Tiger model representation and 3) the data in a Salt model representation. Model based developing of mappings on a conceptual layer becomes much easier especially if a usable API also exists. In the case of using programming languages, one has a well-defined, context specific object model to map with, instead of working with a general model, e.g. a DOM model.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.3">Evaluation</head><p>There are two ways To attach GrAF to Salt: 1) GrAF can be treated as an actual format, therefore a mapper can be implemented and plugged into the Pepper framework or 2) GrAF can be used as a native resource of Salt. GrAF then gains the same status as the automatically generated format Salt-XML 3 . The second approach makes Salt and GrAF become closer and will melt them as a unit consisting of a format and a model. This would be helpful for both, Salt gets a standardized format for persisting data and GrAF gets a processable API with a defined model.</p><p>Both ways need an isomorphic mapping, the general way of mapping was shown in section 2, but some losses remain in terms of the element types of Salt. As shown above, Salt elements such as edges have types: for example they can define a dominance, a coverage relation and further more between nodes. GrAF includes a type attribute for nodes, but no defined value domain, so the mapping from Salt to LAF/GraF can be made, but the way back would be difficult, if the attribute does not contain Salt-types.</p><p>Another loss also occurs for the recursive structure of annotations in Salt. As long as features in GrAF <ref type="bibr">[ide07]</ref> cannot contain feature structures, an annotation of an annotation is not possible.</p><p>The current implementation of Pepper covers modules for the mapping between Salt and the formats EXMARaLDA <ref type="bibr">[schmidt02]</ref>, TigerXML <ref type="bibr">[mengel00]</ref>, TreeTagger <ref type="bibr">[schmid94]</ref>, PAULA <ref type="bibr">[dipper05]</ref> and relANNIS (the relational format of the search and visualization system for multilevel linguistic corpora: ANNIS <ref type="bibr">[zeldes09]</ref>). These data can be represented in Salt. To support other formats it must be discovered if the structure of Salt is powerful enough to cover them, or if Salt has to be expanded.</p><p>3 automatically generated by the modeling framework used, EMF <ref type="bibr">[steinberg09]</ref>, as mentioned in section 1 </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>figure 1 :</head><label>1</label><figDesc>figure 1: correlation between the model and the resource or format layer</figDesc><graphic coords="3,163.50,440.00,268.60,118.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>figure 2 :</head><label>2</label><figDesc>figure 2: on the left side: an excerpt of the xsd description of Tiger XML[mengel00]  ; on the ride side: the correlated model for this excerpt in UML-like notation</figDesc><graphic coords="4,80.10,62.70,431.50,368.50" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>figure 4 :</head><label>4</label><figDesc>figure 4: excerpt of the refinement between the graph structure model and the common model Salt. The elements STextualDS, SToken and SStructure are still nodes and the elements STextualRelation and SDominanceRelation are still edges.</figDesc><graphic coords="5,104.50,502.80,386.30,189.70" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>figure 7: sample from the TEI P5 guidelines of grouping features by using feature structures</figDesc><graphic coords="8,212.30,195.20,171.00,129.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>figure 11 :</head><label>11</label><figDesc>figure 11: on the left side: an annotation which references a library entry; on the right side: an annotation which references a grouping.</figDesc><graphic coords="10,127.20,159.30,341.20,72.00" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>figure 13 :</head><label>13</label><figDesc>figure 13: two different mechanisms to map data from the format Tiger XML to a Salt model (the first way via Tiger XML → Tiger model → Salt, the second way via Tiger XML → SaltXML → Salt).</figDesc><graphic coords="11,88.00,332.00,419.60,108.90" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>figure 14 :</head><label>14</label><figDesc>figure 14: on the left side: an example of data in the Tiger XML format; in the middle: the same example in the model of Tiger XML; on the right side: also the same data in a Salt model</figDesc><graphic coords="12,83.50,62.70,428.50,204.30" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="6,64.60,487.40,466.30,243.60" type="bitmap" /></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0"><head></head><label></label><figDesc></figDesc><graphic coords="9,121.60,503.80,352.50,142.50" type="bitmap" /></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
		<title level="m" type="main">TEI P5: Guidelines for Electronic Text Encoding and Interchange</title>
		<author>
			<persName><forename type="first">L</forename><surname>Burnard</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Bauman</surname></persName>
		</author>
		<ptr target="http://www.tei-c.org/Guidelines/P5/" />
		<imprint>
			<date type="published" when="2008">2008</date>
			<pubPlace>Oxford</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">XML-based Stand-off Representation and Exploitation of Multi-Level Linguistic Annotation</title>
		<author>
			<persName><forename type="first">Stefanie</forename><surname>Dipper</surname></persName>
		</author>
		<editor>Eckstein R, Tolksdorf R</editor>
		<imprint>
			<date type="published" when="2005">2005</date>
			<publisher>Berliner XML Tage</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Language resource management -feature structures -part 1: Feature structure representation</title>
		<author>
			<persName><forename type="first">Nancy</forename><surname>Ide</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Keith</forename><surname>Suderman</surname></persName>
		</author>
		<idno>ISO/DIS 24610-1</idno>
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Linguistic Annotation Workshop</title>
		<meeting>the Linguistic Annotation Workshop<address><addrLine>Prague, Czech Republic</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2005-10-20">2007. 2005. 2005-10-20</date>
			<biblScope unit="page" from="24610" to="24611" />
		</imprint>
	</monogr>
	<note>GrAF: A Graph-based Format for Linguistic Annotations</note>
</biblStruct>

<biblStruct xml:id="b3">
	<monogr>
		<title level="m" type="main">Language resource management -Morphosyntactic annotation framework (MAF)</title>
		<author>
			<persName><surname>Iso</surname></persName>
		</author>
		<idno>ISO TC 37/SC 4 document N225 of 2005-10-15</idno>
		<imprint>
			<date type="published" when="2005">2005</date>
			<biblScope unit="page">24611</biblScope>
		</imprint>
	</monogr>
	<note>ISO/CD 24611</note>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Language resource management -Linguistic annotation framework</title>
		<author>
			<persName><surname>Iso</surname></persName>
		</author>
		<idno>ISO TC 37/SC 4 document N463 rev00 of 2008-05-12</idno>
		<imprint>
			<date type="published" when="2008">2008</date>
			<biblScope unit="page">24612</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">Language resource management -Syntactic annotation framework (SynAF)</title>
		<author>
			<persName><surname>Iso</surname></persName>
		</author>
		<idno>ISO TC 37/SC 4 document N421 of 2009-01-30</idno>
		<imprint>
			<date type="published" when="2009">2009</date>
			<biblScope unit="page">24615</biblScope>
		</imprint>
	</monogr>
	<note>ISO/CD 24615</note>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">ISOcat: Remodeling metadata for language resources</title>
		<author>
			<persName><forename type="first">M</forename><surname>Kemps-Snijders</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Windhouwer</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Wittenburg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><forename type="middle">E</forename><surname>Wright</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Metadata, Semantics and Ontologies (IJMSO)</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="issue">4</biblScope>
			<biblScope unit="page" from="261" to="276" />
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">Ein Suchwerkzeug für syntaktisch annotierte Textkorpora</title>
		<author>
			<persName><forename type="first">Wolfgang</forename><surname>Lezius</surname></persName>
		</author>
		<ptr target="http://www.ims.uni-" />
		<imprint>
			<date type="published" when="2002">2002</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title level="a" type="main">An XML-based encoding format for syntactically annotated corpora</title>
		<author>
			<persName><forename type="first">Andreas</forename><surname>Mengel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Wolfgang</forename><surname>Lezius</surname></persName>
		</author>
		<ptr target="Athen.stuttgart.de/projekte/corplex/paper/lezius/diss/" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the Second International Conference on Language Resources and Engineering (LREC 2000)</title>
		<meeting>the Second International Conference on Language Resources and Engineering (LREC 2000)</meeting>
		<imprint>
			<date type="published" when="2000">2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">MDA Guide Version 1.0.1. Object Management Group (OMG)</title>
		<author>
			<persName><forename type="first">J</forename><surname>Miller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Mukerji</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2003">2003</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Guidelines für das Tagging deutscher Textkorpora mit STTS</title>
		<author>
			<persName><forename type="first">A</forename><surname>Schiller</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Teufel</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Thielen</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995">1995</date>
		</imprint>
		<respStmt>
			<orgName>Universität Stuttgart and Universität Tübingen</orgName>
		</respStmt>
	</monogr>
	<note type="report_type">Technical report</note>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">Probabilistic Part-of-Speech Tagging Using Decision Trees</title>
		<author>
			<persName><forename type="first">Helmut</forename><surname>Schmid</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of International Conference on New Methods in Language Processing</title>
		<meeting>International Conference on New Methods in Language Processing</meeting>
		<imprint>
			<date type="published" when="1994">1994</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">EXMARaLDA -ein System zur Diskurstranskription auf dem Computer</title>
		<author>
			<persName><forename type="first">Thomas</forename><surname>Schmidt</surname></persName>
		</author>
		<ptr target="http://www.exmaralda.org/files/AZM.pdf" />
	</analytic>
	<monogr>
		<title level="m">ff</title>
		<imprint>
			<date type="published" when="2002">2002</date>
			<biblScope unit="volume">34</biblScope>
			<biblScope unit="page">1</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
		<author>
			<persName><forename type="first">David</forename><surname>Steinberg</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Frank</forename><surname>Budinsky</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Marcelo</forename><surname>Paternostro</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Ed</forename><surname>Merks</surname></persName>
		</author>
		<title level="m">EMF: Eclipse Modeling Framework 2.0</title>
		<imprint>
			<publisher>Addison-Wesley Professional</publisher>
			<date type="published" when="2009">2009</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">ANNIS: A Search Tool for Multi-Layer Annotated Corpora</title>
		<author>
			<persName><forename type="first">Amir</forename><surname>Zeldes</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Julia</forename><surname>Ritz</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Anke</forename><surname>Lüdeling</surname></persName>
		</author>
		<author>
			<persName><forename type="first">Christian</forename><surname>Chiarcos</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Proceedings of Corpus Linguistics</title>
		<meeting>Corpus Linguistics<address><addrLine>Liverpool</addrLine></address></meeting>
		<imprint>
			<date type="published" when="2009-07-20">2009. 2009. July 20-23, 2009</date>
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
