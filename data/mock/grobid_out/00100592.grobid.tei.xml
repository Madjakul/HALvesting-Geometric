<?xml version="1.0" encoding="UTF-8"?>
<TEI xml:space="preserve" xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 https://raw.githubusercontent.com/kermitt2/grobid/master/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">A Common XML-based Framework for Syntactic Annotation</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName><forename type="first">Nancy</forename><surname>Ide</surname></persName>
							<email>ide@cs.vassar.edu</email>
						</author>
						<author>
							<persName><forename type="first">Laurent</forename><surname>Romary</surname></persName>
							<email>romary@loria.fr</email>
							<affiliation key="aff1">
								<orgName type="laboratory">LORIA/CNRS Campus Scientifique</orgName>
								<address>
									<postBox>B.P. 239</postBox>
									<postCode>54506</postCode>
									<settlement>Vandoeuvre-lès-Nancy</settlement>
									<country key="FR">FRANCE</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName><forename type="first">Tomaž</forename><surname>Erjavec</surname></persName>
							<email>tomaz.erjavec@ijs.si</email>
							<affiliation key="aff2">
								<orgName type="department">Department of Intelligent Systems Institute &quot;Jožef Stefan&quot;</orgName>
								<address>
									<addrLine>Jamova 39</addrLine>
									<postCode>SI-1000</postCode>
									<settlement>Ljubljana</settlement>
									<country key="SI">SLOVENIA</country>
								</address>
							</affiliation>
						</author>
						<author>
							<affiliation key="aff0">
								<orgName type="department">†Department of Computer Science Vassar College</orgName>
								<address>
									<postCode>12604-0520</postCode>
									<settlement>Poughkeepsie</settlement>
									<region>New York</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">A Common XML-based Framework for Syntactic Annotation</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<idno type="MD5">5C8DD8573F1126B6896236FD573C95A1</idno>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<encodingDesc>
			<appInfo>
				<application version="0.7.3" ident="GROBID" when="2023-08-24T15:02+0000">
					<desc>GROBID - A machine learning software for extracting information from scholarly documents</desc>
					<ref target="https://github.com/kermitt2/grobid"/>
				</application>
			</appInfo>
		</encodingDesc>
		<profileDesc>
			<abstract>
<div xmlns="http://www.tei-c.org/ns/1.0"><p>It is widely recognized that the proliferation of annotation schemes runs counter to the need to re-use language resources, and that standards for linguistic annotation are becoming increasingly mandatory. To answer this need, we have developed a framework comprised of an abstract model for a variety of different annotation types (e.g., morpho-syntactic tagging, syntactic annotation, co-reference annotation, etc.), which can be instantiated in different ways depending on the annotator's approach and goals. In this paper we provide an overview of the framework, demonstrate its applicability to syntactic annotation, and show how it can contribute to comparative evaluation of parser output and diverse syntactic annotation schemes.</p></div>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>It is widely recognized that the proliferation of annotation schemes runs counter to the need to re-use language resources, and that standards for linguistic annotation are becoming increasingly mandatory. In particular, there is a need for a general framework for linguistic annotation that is flexible and extensible enough to accommodate different annotation types and different theoretical and practical approaches, while at the same time enabling their representation in a "pivot" format that can serve as the basis for comparative evaluation of parser output, such as PARSEVAL <ref type="bibr">(Harrison, et al., 1991)</ref>, as well as the development of reusable editing and processing tools.</p><p>To answer this need, we have developed such a framework comprised of an abstract model for a variety of different annotation types (e.g., morpho-syntactic tagging, syntactic annotation, co-reference annotation, etc.), which can be instantiated in different ways depending on the annotator's approach and goals. We have implemented both the abstract model and various instantiations using XML schemas <ref type="bibr" target="#b6">(Thompson, et al., 2000)</ref>, the Resource Definition Framework (RDF) <ref type="bibr" target="#b4">(Lassila and Swick, 2000)</ref> and RDF schemas <ref type="bibr" target="#b1">(Brickley and Guha, 2000)</ref>, which enable description and definition of abstract data models together with means to interpret, via the model, information encoded according to different conventions. The results have been incorporated into XCES <ref type="bibr">(Ide, et al., 2000a)</ref>, part of the EAGLES Guidelines developed by the Expert Advisory Group on Language Engineering Standards (EAGLES),<ref type="foot" target="#foot_0">1</ref> which provides a ready-made, standard encoding format together with a data architecture designed specifically for linguistically annotated corpora.</p><p>In this paper we provide an overview of our encoding framework and demonstrate its applicability to syntactic annotation. The framework has also been applied to terminology (Terminological Markup Framework<ref type="foot" target="#foot_1">2</ref> , ISO project n.16642) and computational lexicons <ref type="bibr">(Ide, et al., 2000b)</ref>, thus demonstrating its general applicability for a variety of linguistic annotation types. We also show how the framework can contribute to comparative evaluation of diverse syntactic annotation schemes and enable assessment of the relative strengths and weaknesses of different parsers, an area of increasing importance for the field.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Current practice</head><p>Syntactic annotation schemes provide at least one, and often both, of the following kinds of information:</p><p>(1) category : bracketing and labeling of strings based on syntactic category (e.g., noun phrase, prepositional phrase); (2) dependency: relations among bracketed elements reflecting their syntactic roles (e.g., subject, object). For example, the annotation in Figure <ref type="figure">1</ref>, drawn from the Penn Treebank II<ref type="foot" target="#foot_2">3</ref> (hereafter, PTB), uses LISP-like list structures to bracket strings and provide category information. Hierarchical nesting and left-to-right adjacency are used to reflect dependency relations; however, "subject" is explicitly (and redundantly, given that the relation is implicit in the structure) labeled along with the category information, although other relations (e.g., "object") are left implicit in the structure. Relations among non-contiguous elements demand a special numbering mechanism to enable reference to a non-contiguous elements, which enables specifying the NP-SBJ of the embedded sentence by reference to the earlier NP-SBJ-1 node.</p><p>((S (NP-SBJ-1 Jones) (VP followed) (NP him) (PP-DIR into (NP the front room)) , (S-ADV (NP-SBJ *-1) (VP closing (NP the door) (PP behind (NP him))))) .))</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Figure 1 : PTB annotation example</head><p>Although they differ in the labels and in some cases the function of various nodes in the tree, most syntactic annotation schemes rely on hierarchical nesting to indicate component relations among elements, together with linear, left-to-right ordering at any level of the tree to indicate grammatical role. In the PTB example, the nesting of the NP "the front room" implies that the NP is the object of the prepositional phrase, whereas the position of the NP "him" following and at the same level as the VP node implies that this NP is the grammatical object. When it is necessary to specify a relation among non-contiguous elements, any of a variety of ad hoc mechanisms may be employed (such as the node numbering scheme in the PTB example). In contrast, pure dependency annotation schemes, such as the scheme described in Carroll, Minnen and Briscoe (forthcoming), specify grammatical relations among elements explicitly; for example, the sentence "Paul intends to leave IBM" could be represented as shown in Figure <ref type="figure" target="#fig_1">2</ref>, where the predicate is the relation type, the first argument is the head, the second the dependent, and additional arguments may provide category-specific information (e.g., introducer for prepositional phrases, etc.). Although dependency schemes do not rely on hierarchical nesting to indicate relations, an independently specified relation hierarchy is typically defined which enables construction of a syntax tree from the dependency annotation.  </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>A model for syntactic annotation</head><p>The goal in the XCES is to provide a framework for annotation that is theory and tagset independent. We accomplish this by treating the description of any specific syntactic annotation scheme as a process involving several knowledge sources that interact at various levels. The process allows one to specify, on the one hand, the informational properties of the scheme (i.e., its capacity to represent a given piece of information), and, on the other, the way the scheme can be instantiated (e.g., as an XML document).</p><p>Figure <ref type="figure" target="#fig_2">3</ref> shows the overall architecture of the XCES framework for syntactic annotation. </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Non-XML Encoding</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Universal Resources Project Specific Resources</head><p>Recommendations for Syntactic Annotation of Corpora <ref type="bibr" target="#b5">(Leech et al., 1996)</ref>. Data categories are defined using RDF schema that formalize the properties associated with each. The categories are organized in a hierarchy, from general to specific. For example, a general dependent relation may be defined, which may be defined to have one of the possible values argument or modifier; argument in turn may have the possible values subject, object, or complement; etc.<ref type="foot" target="#foot_3">4</ref> Note that RDF schemas function much like class definitions in an object-oriented programming language: they provide, effectively, templates that describe how objects may be instantiated, but do not constitute the objects themselves. Thus, in a document containing an actual annotation, several objects with the type argument may be instantiated, each with a different value. The RDF schema ensures recognition that each instantiation of argument is a sub-class of dependent and inherits the appropriate properties.</p><p>The project-specific format for the annotation scheme, in terms of its expressive power and its instantiation in XML is defined in the two other knowledge sources: Data Category Specification (DCS): describes the set of data categories that can be used within a given annotation scheme, again using RDF schema. The DCS defines constraints on each category, including restrictions on the values they can take (e.g., "text with markup"; a "picklist" for grammatical gender, or any of the data types defined for XML), restrictions on where a particular data category can appear (level in the structural hierarchy). The DCS may include a subset of categories from the DCR together with application-specific categories additionally defined in the DCS. The DCS also indicates a level of granularity based on the DCR hierarchy.</p><p>Dialect specification: defines, using XML schemas, XSLT scripts, and XSL style sheets, the project-specific XML format and labels for syntactic annotations. The specifications may include:</p><p>Data category instantiation styles: Data categories may be realized in a project-specific scheme in any of a variety of formats. For example, if NounPhrase is the value of a complex data category Cat, Cat may be realized as an element (&lt;cat&gt;nom&lt;/cat&gt;), an attribute (cat="NP" attached to an anchoring element), a typed element (e.g., &lt;gram type="cat"&gt;NP&lt;/gram&gt;), a valued element (&lt;cat value="NP"/&gt;, etc. Data category vocabulary styles: Project-specific formats can utilize names different from those in the Data Category Registry; for instance, a DCR specification for NounPhrase can be expressed as "NP" or "SN" ("syntagme nominal", in French) in the project-specific format, if desired. Expansion structures: A project-specific format may alter the structure of the annotation as expressed using the structural skeleton. For example, it may be desirable for processing or other reasons to create two sub-nodes under a given &lt;struct&gt; node, one to group features and one to group relations (see section 3.1).</p><p>The combination of the structural skeleton and the DCS defines a virtual annotation markup language (AML). Any information structure that corresponds to a virtual AML has a canonical expression as an XML document; therefore, the inter-operability of different AMLs is dependent only on their compatibility at the virtual level. As such, virtual AML is the hub of the annotation framework: it defines the pivot format for syntactic annotations that can be used to compare annotation schemes as well as enable the design of generic tools for visualization, editing, extraction, etc.</p><p>The combination of a virtual AML with the Dialect specification provides the information necessary to automatically generate a concrete AML representation of the annotation scheme, which conforms to the project-specific specification provide in the Dialect specification. XSLT filters translate between the representations of the annotation in concrete and virtual AML, as well as between non-XML formats (such as the LISP-like PTB notation) and concrete AML.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">The structural skeleton</head><p>For syntactic annotation, we can identify a general, underlying model that informs current practice: specification of dependency relations (with some set of application-specific names and properties) among a set of grammatical constituents (also with a set of application-specific names and properties), whether this is modeled with a tree structure or the relations are given explicitly.</p><p>The most common representation for syntactic annotation in both treebanks and parser output based on manually-developed generative grammars is the phrase-structure tree. Because documents marked in XML are also hierarchically-structured, we provide a structural skeleton for syntactic markup that follows this approach. The skeleton consists of the following elements:</p><p>&lt;struct&gt; represents a node (level) in the tree. &lt;struct&gt; elements may be recursively nested at any level to reflect the structure of the corresponding syntax tree. In the virtual AML, &lt;struct&gt; elements are not typed (i.e., associated via attributes with specific data categories such as Sentence, NounPhrase, etc.), although project-specific XML schema can provide this information. &lt;feat&gt; (feature) is used to provide information attached to the node in the tree represented by the enclosing &lt;struct&gt; element. A type attribute on the &lt;feat&gt; element identifies the data category of the feature. The tag may contain a string that provides an appropriate value for the data category (e.g., for type=CAT the value might be "NP") or may point via a target attribute to an object in another document that provides the value. Note that this allows the possibility for including not only simple values but also complex data items as annotations. It also enables generating a single instantiation of an annotation value in a separate document that can be referenced as needed within the annotation document. &lt;brack&gt; is a general-purpose bracketing element to group associated features; it can be recursively nested to describe complex structures.</p><p>&lt;alt&gt; provides for encoding one or more alternative annotations (e.g., attachment of a PP to the verb and to the preceding object, where ambiguous or undetermined). Together, &lt;feat&gt;, &lt;brack&gt;, and &lt;alt&gt; can be used to encode simple or complex feature structures. &lt;rel&gt; is used to identify dependencies explicitly, by pointing to a &lt;struct&gt; element to which the current node is related. The &lt;rel&gt; element has the attributes type, head, dependent, introducer, which reference the relevant strings or structures, and initial, which specifies a thematic or semantic role. &lt;seg&gt; points to the data to which the annotation applies. In XCES, we recommend the use of stand-off annotation, i.e., annotation that is maintained in a document separate from the primary (annotated) data. The &lt;seg&gt; element would use the xlink attribute, which would use the XML Path Language, XPath <ref type="bibr" target="#b3">(Clark &amp; DeRose, 1999)</ref> to specify the location of the relevant data. Figure <ref type="figure">4</ref> shows the annotation from the PTB example (Figure <ref type="figure">1</ref>) rendered in the abstract XML format. Our encoding makes explicit relations that were implicit in the original version; however, implicit relations could be made explicit via an XML schema rather than encoding them explicitly. A strict dependency annotation can be encoded using a flat hierarchy (i.e., a single enclosing &lt;struct&gt; element) and specifying all relations explicitly with the &lt;rel&gt; tag, as shown in Figure <ref type="figure" target="#fig_3">5</ref>. For the sake of readability, this encoding assumes that the sentence is marked up as: &lt;s id= "s1"&gt; &lt;w id="w1"&gt;Paul&lt;/w&gt; &lt;w id="w2"&gt;intends&lt;/w&gt; &lt;w id="w3"&gt;to&lt;/w&gt; &lt;w id ="w4"&gt;leave&lt;/w&gt; &lt;w id="w5"&gt;IBM&lt;/w&gt; &lt;/s&gt;.</p><p>Note that we encode explicitly here much information that will ultimately be specified using RDF, which provides built-in support for linkage with labeled relations (links). In particular, information currently specified using the &lt;feat&gt; element can be represented as a 3-tuple (resource, property, value) that indicates that the resource (identified by ID=s1 in the encoding above) has the property CAT with value NP, etc. Similarly, information represented in the encoding above using &lt;rel&gt; elements and the ref attribute could also be expressed in RDF. Because universal web-based support for RDF is still under development, we provide alternative XML formats for the interim.</p><p>&lt;struct xml:base="http://www.loria.fr/doc.xml#"&gt; &lt;struct id="s0"&gt; &lt;feat type="CAT"&gt;S&lt;/feat&gt; &lt;struct id="s1"&gt; &lt;feat type="CAT"&gt;NP&lt;/feat&gt; &lt;rel type="SBJ" head="s2"/&gt; &lt;seg xlink:href="xptr(substring(/p/s[1]/text(),1,5))"/&gt;&lt;/struct&gt; &lt;struct id="s2"&gt; &lt;feat type="CAT"&gt;VP&lt;/feat&gt; &lt;seg xlink:href="xptr(substring(/p/s[1]/text(),7,8))"/&gt; &lt;struct&gt; &lt;feat type="CAT"&gt;NP&lt;/feat&gt; &lt;rel type="OBJ" head="s2"/&gt; &lt;!--implicit in original --&gt; &lt;seg xlink:href="xptr(substring(/p/s[1]/text(),16,3))"/&gt;&lt;/struct&gt; &lt;struct&gt; &lt;feat type="CAT"&gt;PP&lt;/feat&gt; &lt;rel type="DIR" head="s2"/&gt; &lt;seg xlink:href="xptr(substring(/p/s[1]/text(),20,4))"/&gt; &lt;struct&gt; &lt;feat type="CAT"&gt;NP&lt;/feat&gt; xlink:href="xptr(substring(/p/s[1]/text(),25,14))"/&gt;&lt;/struct&gt; &lt;struct&gt; &lt;feat type="CAT"&gt;S&lt;/feat&gt; &lt;rel type="ADV" head="s2"/&gt; &lt;struct ref="s1"&gt; &lt;feat type="CAT"&gt;NP&lt;/feat&gt; &lt;rel type="SBJ" head="s3"/&gt;&lt;/struct&gt; &lt;struct id="s3"&gt; &lt;feat type="CAT"&gt;VP&lt;/feat&gt;&lt;struct&gt;…</p><p>Figure 4 : The PTB example encoded according to the structural skeleton &lt;struct&gt; &lt;rel type="subj" head="w2" dependent="w1"/&gt; &lt;rel type="xcomp" head="w2" dependent="w4" introducer="w3"/&gt; &lt;rel type="subj" head="w4" dependent="w1"/&gt; &lt;rel type="dobj" head="w4" dependent="w5"/&gt; &lt;/struct&gt; </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Comparing schemes</head><p>The Virtual AML provides a pivot format that enables direct comparison of annotations in different formats-including not only different constituency-based annotations, but also constituency-based and dependency annotations. For example, the PTB annotation corresponding to the dependency annotation in Figure <ref type="figure" target="#fig_1">2</ref> is shown in Figure <ref type="figure" target="#fig_4">6</ref>. Figure <ref type="figure" target="#fig_5">7</ref> gives the corresponding encoding in the XCES abstract scheme. Relations are encoded only when they appear explicitly in the original annotation; an XML schema specifies the relations implicit in the embedding (e.g., indicating that the first VP is the head, etc.) From the encoding in Figure <ref type="figure" target="#fig_5">7</ref>, an XSLT script<ref type="foot" target="#foot_4">5</ref> produces a dependency encoding virtually identical to the one in Figure <ref type="figure" target="#fig_3">5</ref>, thus enabling direct comparison of the two annotations. The only differences between the two would be in relation labels (e.g., XCOMP), which would be mapped via the Dialect Specification to the same category in the Data Category Registry and therefore recognized as equivalent.</p><p>The ability to generate a common representation for different annotations overcomes several obstacles that have hindered evaluation exercises in the past. For instance, the evaluation technique used in the PARSEVAL exercise is applicable to phrase-structure analyses only, and cannot be applied to dependency-style analyses or "lexical" parsing frameworks such as finite-state constraint parsers. As the example above shows, this problem is eliminated using the XCES framework. It has also been noted that that the PARSEVAL bracket-precision measure penalizes parsers that return more structure than exists in the relatively "flat" treebank structures, even if they are correct <ref type="bibr">(Srinivas, et al., 1995)</ref>. XSLT scripts can extract the appropriate information for comparison purposes while retaining links to additional parts of the annotation in the original document, thus eliminating the need to "dumb down" parser output in order to participate in the evaluation exercise. Similarly, information lost in the transduction from phrase-structure to a dependency-based analysis (as in the example above), which, as <ref type="bibr" target="#b0">Atwell (1996)</ref> points out, may eliminate grammatical information potentially required for later processing, can also be retained.</p><p>Of course, one of the greatest obstacles to the comparison and evaluation of syntactic annotations remains the difficulty of mapping schemes that are often based on different theories and developed for very different purposes. At the least, our attempt to develop an abstract model that captures the fundamental properties of syntactic annotation schemes will serve, we hope, as a conceptual tool for assessing the coherence and consistency of existing schemes as well as newly developed ones, which is an essential step toward harmonization. The requirement that all relations are made explicit, either in the encoding or via an XML schema that describes them, can lead to the discovery of gaps and inconsistencies in existing schemes. <ref type="foot" target="#foot_5">6</ref> Hand-developed annotation schemes used in treebanks are often described only informally in guidebooks for annotators, often resulting in virtual anarchy; for example, Charniak <ref type="bibr">(1996)</ref> notes that the PTB implicitly contains more than 10,000 context-free rules, most of which are used only once. Mappability of schemes becomes virtually impossible under such circumstances. While requiring that annotators make relations explicit and consider the mapping to the XCES abstract format increases overhead, we feel that the exercise will help avoid such problems and can only lead to greater coherence, consistency, and inter-operability among annotation schemes.</p><p>The most important contribution to inter-operability of annotation schemes is the Data Category Registry. By mapping site-specific categories onto definitions in the Registry, equivalences (and non-equivalences) are made explicit. Again, the provision of a "standard" set of categories, together with the requirement that scheme-specific categories are mapped to them where possible, can only contribute to greater consistency and commonality for annotation schemes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5">Conclusion</head><p>The framework presented here for syntactic annotation is intended to allow for variation in annotation schemes while at the same time enabling comparison and evaluation, as well as the development of common tools for creating and using annotated data. Despite its seeming complexity, the framework is also intended to reduce overhead for annotators and users. Part of the work of the XCES is to provide XML support (e.g., development of XSLT scripts, XML schemas, etc.) for use by the research community, thus eliminating the need for XML expertise at each development site. Also, with XML at its core, the XCES framework builds on emerging standards for data interchange for which there is widespread support; common scripts and tools can be developed, reducing the "reinventing of the wheel" that is commonplace in the area of corpus annotation at present. Because XML-encoded annotated corpora are increasingly used for interchange between individual processing and their formats are rendered in the abstract format. analytic tools, for commonly used tools we are developing XSLT scripts for mapping, and extraction of annotated data, import/export of (partially) annotated material, and integration of results of external tools into existing annotated data in XML. Tools for editing annotations in the abstract format and for automatically generating virtual AML from Data Category and Dialect Specifications are already under development in the context of work on the Terminological Markup Language; as XML use becomes more widespread, more and more reusable tools and resources (including web-based applications) will become available.</p><p>&lt;struct id="s0"&gt; &lt;feat type="CAT"&gt;S&lt;/feat&gt; &lt;struct id="s1"&gt; &lt;feat type="CAT"&gt;NP&lt;/feat&gt; &lt;rel type="SBJ" head="s2"/&gt; &lt;seg target="w1"/&gt;&lt;/struct&gt; &lt;struct id="s2"&gt; &lt;feat type="CAT"&gt;VP&lt;/feat&gt; &lt;seg target="w2"/&gt;&lt;/struct&gt; &lt;struct id="s3"&gt; &lt;feat type="CAT"&gt;S&lt;/feat&gt; &lt;struct id="s4" ref="s1"&gt; &lt;rel type="SBJ" head="s6"/&gt;&lt;/struct&gt; &lt;struct id="s5"&gt; &lt;feat type="CAT"&gt;VP&lt;/feat&gt; &lt;seg target="w3"/&gt; &lt;struct id="s6"&gt; &lt;feat type="CAT"&gt;VP&lt;/feat&gt; &lt;seg target="w4"/&gt; &lt;struct&gt; id="s7"&gt; &lt;feat type="CAT"&gt;NP&lt;/feat&gt; &lt;seg target="w5"/&gt;&lt;/struct&gt; &lt;/struct&gt;&lt;/struct&gt;&lt;/struct&gt; </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 2 :</head><label>2</label><figDesc>Figure 2 : Dependency annotation according to Carroll, Minnen, and Briscoe</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 3 :</head><label>3</label><figDesc>Figure 3 : Overall architecture of the XCES annotation framework Two universal knowledge sources are used define the abstract model: Structural Skeleton: a domain-dependent abstract structural framework for syntactic annotations, capable of capturing all the information in a specific annotation scheme. The structural</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 5 :</head><label>5</label><figDesc>Figure 5 : Abstract XML encoding for the dependency annotation in Figure 2.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 6 :</head><label>6</label><figDesc>Figure 6: PTB annotation of "Paul intends to leave IBM."</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 7 :</head><label>7</label><figDesc>Figure 7 : PTB encoding of "Paul intends to leave IBM."</figDesc></figure>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="1" xml:id="foot_0"><p>http://www.ilc.pi.cnr.it/EAGLES/home.html</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="2" xml:id="foot_1"><p>http://www.loria.fr/projects/TMF</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="3" xml:id="foot_2"><p>http://www.cis.upenn.edu/treebank</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="4" xml:id="foot_3"><p>Cf. the hierarchy in Figure1.1, Caroll, Minnen, and Briscoe (forthcoming).</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="5" xml:id="foot_4"><p>The XML schema and XSLT script are not reproduced here due to space constraints.</p></note>
			<note xmlns="http://www.tei-c.org/ns/1.0" place="foot" n="6" xml:id="foot_5"><p>Indeed, several annotation scheme developers have been surprised to see inconsistencies revealed when</p></note>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Comparative evaluation of grammatical annotation models</title>
		<author>
			<persName><forename type="first">E</forename><surname>Atwell</surname></persName>
		</author>
		<author>
			<persName><surname>Rodopi</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Biron</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Malhotra</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/xmlschema-2/" />
	</analytic>
	<monogr>
		<title level="m">XML Schema Part 2: Datatypes. W3C Candidate Recommendation</title>
		<editor>
			<persName><forename type="first">R</forename><surname>Sutcliffe</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">H</forename><surname>Koch</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">A</forename><surname>Mcelligott</surname></persName>
		</editor>
		<imprint>
			<date type="published" when="1996">1996. 2000</date>
			<biblScope unit="page" from="25" to="46" />
		</imprint>
	</monogr>
	<note>Industrial Parsing of Software Manuals</note>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Resource Description Framework (RDF) Schema Specification 1</title>
		<author>
			<persName><forename type="first">T</forename><surname>Bray</surname></persName>
		</author>
		<author>
			<persName><forename type="first">J</forename><surname>Paoli</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Sperberg-Mcqueen ; Brickley</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><forename type="middle">V</forename><surname>Guha</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/rdf-schema/" />
	</analytic>
	<monogr>
		<title level="m">Extensible Markup Language (XML)</title>
		<editor>
			<persName><forename type="first">C</forename><forename type="middle">M</forename></persName>
		</editor>
		<imprint>
			<date type="published" when="1998">1998. 2000</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Parser Evaluation Using a Grammatical Relation Annotation Scheme</title>
		<author>
			<persName><forename type="first">J</forename><surname>Carroll</surname></persName>
		</author>
		<author>
			<persName><forename type="first">G</forename><surname>Minnen</surname></persName>
		</author>
		<author>
			<persName><forename type="first">T</forename><surname>Briscoe</surname></persName>
		</author>
		<author>
			<persName><forename type="first">E</forename><surname>Charniak</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/xslt" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of the 13 th National Conference on Artificial Intelligence, AAAI&apos;96</title>
		<editor>
			<persName><surname>Portland</surname></persName>
		</editor>
		<editor>
			<persName><forename type="first">J</forename><surname>Clark</surname></persName>
		</editor>
		<meeting>the 13 th National Conference on Artificial Intelligence, AAAI&apos;96</meeting>
		<imprint>
			<publisher>Kluwer Academic Publishers</publisher>
			<date type="published" when="1996">1996. 1999</date>
			<biblScope unit="page" from="1031" to="1036" />
		</imprint>
	</monogr>
	<note>XSL Transformations (XSLT)</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">XCES: An XML-based Standard for Linguistic Corpora</title>
		<author>
			<persName><forename type="first">J</forename><surname>Clark</surname></persName>
		</author>
		<author>
			<persName><forename type="first">S</forename><surname>Derose</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Ide</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Bonhomme</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Romary</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/xpath" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of Second Language Resources and Evaluation Conference (LREC)</title>
		<meeting>Second Language Resources and Evaluation Conference (LREC)<address><addrLine>Athens</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">1999. 2000</date>
			<biblScope unit="page" from="825" to="830" />
		</imprint>
	</monogr>
	<note>XML Path Language (XPath)</note>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">A Formal Model of Dictionary Structure and Content</title>
		<author>
			<persName><forename type="first">N</forename><surname>Ide</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Kilgarriff</surname></persName>
		</author>
		<author>
			<persName><forename type="first">L</forename><surname>Romary</surname></persName>
		</author>
		<author>
			<persName><forename type="first">O</forename><surname>Lassila</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Swick</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/REC-rdf-syntax" />
	</analytic>
	<monogr>
		<title level="m">Resource Description framework (RDF) Model and Syntax</title>
		<meeting><address><addrLine>Stuttgart</addrLine></address></meeting>
		<imprint>
			<date type="published" when="1999">2000. 1999</date>
			<biblScope unit="page" from="113" to="126" />
		</imprint>
	</monogr>
	<note>Proceedings of EURALEX&apos;00</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">EAGLES Recommendations for the Syntactic Annotation of Corpora</title>
		<author>
			<persName><forename type="first">G</forename><surname>Leech</surname></persName>
		</author>
		<author>
			<persName><forename type="first">R</forename><surname>Barnett</surname></persName>
		</author>
		<author>
			<persName><forename type="first">P</forename><surname>Kahrel</surname></persName>
		</author>
		<ptr target="http://www.ilc.pi.cnr.it/EAGLES/" />
		<imprint>
			<date type="published" when="1996">1996</date>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title level="a" type="main">An approach to robust partial parsing and evaluation metrics</title>
		<author>
			<persName><forename type="first">B</forename><surname>Srinivas</surname></persName>
		</author>
		<author>
			<persName><forename type="first">C</forename><surname>Doran</surname></persName>
		</author>
		<author>
			<persName><forename type="first">B</forename><surname>Hockey</surname></persName>
		</author>
		<author>
			<persName><forename type="first">A</forename><surname>Joshi</surname></persName>
		</author>
		<author>
			<persName><surname>Prague</surname></persName>
		</author>
		<author>
			<persName><forename type="first">H</forename><surname>Thompson</surname></persName>
		</author>
		<author>
			<persName><forename type="first">D</forename><surname>Beech</surname></persName>
		</author>
		<author>
			<persName><forename type="first">M</forename><surname>Maloney</surname></persName>
		</author>
		<author>
			<persName><forename type="first">N</forename><surname>Mendelsohn</surname></persName>
		</author>
		<ptr target="http://www.w3.org/TR/xmlschema-1/" />
	</analytic>
	<monogr>
		<title level="m">Proceedings of ESSLI&apos;96 Workshop on Robust Parsing</title>
		<meeting>ESSLI&apos;96 Workshop on Robust Parsing</meeting>
		<imprint>
			<date type="published" when="1996">1996. 2000</date>
			<biblScope unit="page" from="70" to="82" />
		</imprint>
	</monogr>
	<note>XML Schema Part 1: Structures</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
